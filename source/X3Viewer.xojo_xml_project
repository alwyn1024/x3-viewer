<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2014r2.1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Project" ID="0">
 <ProjectSavedInVers>2014.021</ProjectSavedInVers>
 <MajorVersion>0</MajorVersion>
 <MinorVersion>3</MinorVersion>
 <SubVersion>0</SubVersion>
 <Release>0</Release>
 <NonRelease>0</NonRelease>
 <Region></Region>
 <ShortVersion></ShortVersion>
 <LongVersion></LongVersion>
 <InfoVersion></InfoVersion>
 <AutoIncVersion>0</AutoIncVersion>
 <DefaultViewID>893575167</DefaultViewID>
 <ProjectType>0</ProjectType>
 <DefaultLanguage>0</DefaultLanguage>
 <CurrentLanguage>0</CurrentLanguage>
 <DefaultEncoding>0</DefaultEncoding>
 <BuildFlags>29072</BuildFlags>
 <UseBuildsFolder>1</UseBuildsFolder>
 <WebApp>0</WebApp>
 <Icon>
 </Icon>
 <MacCreator></MacCreator>
 <BuildCarbonName>X3 Viewer</BuildCarbonName>
 <BuildCarbonMachOName>X3 Viewer</BuildCarbonMachOName>
 <BundleIdentifier>com.xojo3d.x3viewer</BundleIdentifier>
 <WinMDICaption></WinMDICaption>
 <BuildWinName>X3 Viewer.exe</BuildWinName>
 <BuildWinMDI>0</BuildWinMDI>
 <BuildWinCompanyName>www.Xojo3D.com</BuildWinCompanyName>
 <BuildWinProductName></BuildWinProductName>
 <BuildWinInternalName></BuildWinInternalName>
 <BuildWinFileDescription></BuildWinFileDescription>
 <UseGDIPlus>1</UseGDIPlus>
 <BuildLinuxX86Name>X3 Viewer</BuildLinuxX86Name>
 <BuildCarbonExecutableFormat>1</BuildCarbonExecutableFormat>
 <DebuggerCommandLine></DebuggerCommandLine>
</block>
<block type="Module" ID="1477969919">
 <ObjName>App</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Application</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <IsApplicationObject>1</IsApplicationObject>
 <Compatibility></Compatibility>
 <PropertyVal Name="MenuBar">1439348735</PropertyVal>
 <ViewBehavior>
 </ViewBehavior>
 <Constant>
  <ItemName>kFileQuitShortcut</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kFileQuitShortcut</ItemName>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Cmd+Q</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Ctrl+Q</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kFileQuit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kFileQuit</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>&amp;Quit</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>E&amp;xit</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kEditClear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kEditClear</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>&amp;Delete</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>&amp;Delete</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>&amp;Delete</ItemDef>
  </ConstantInstance>
 </Constant>
</block>
<block type="Toolbar" ID="941037567">
 <ObjName>MainToolbar</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Toolbar</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>100</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialParent</ObjName>
   <ItemType>String</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Window" ID="2112952319">
 <ObjName>frmCamera</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>KeyDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function KeyDown(Key As String) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>frmMain.handleKey Key</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>LoadSceneCameras</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub LoadSceneCameras()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// populate cameras</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>comCamera.DeleteAllRows</SourceLine>
   <SourceLine>for i = 0 to frmMain.CurrentScene.Camera.Ubound</SourceLine>
   <SourceLine>comCamera.AddRow "Camera " + Str(i + 1)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine>comCamera.ListIndex = frmMain.CurrentScene.CameraIndex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// set active camera fields</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>txtFOV.Text = X3_Str(frmMain.CurrentScene.ActiveCamera.FieldOfView)</SourceLine>
   <SourceLine>txtZNear.Text = X3_Str(frmMain.CurrentScene.ActiveCamera.zNear)</SourceLine>
   <SourceLine>txtZFar.Text = X3_Str(frmMain.CurrentScene.ActiveCamera.zFar)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MenuBar">0</PropertyVal>
 <PropertyVal Name="MacProcID"><Hex bytes="1">30</Hex></PropertyVal>
 <PropertyVal Name="FullScreenButton">False</PropertyVal>
 <PropertyVal Name="MinimizeButton">False</PropertyVal>
 <PropertyVal Name="MaximizeButton">False</PropertyVal>
 <PropertyVal Name="LiveResize">True</PropertyVal>
 <PropertyVal Name="Resizeable">True</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Title">Camera</PropertyVal>
 <PropertyVal Name="Backdrop">0</PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="Composite">False</PropertyVal>
 <PropertyVal Name="Frame"><Hex bytes="1">33</Hex></PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">64</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">305</PropertyVal>
 <PropertyVal Name="Width">270</PropertyVal>
 <PropertyVal Name="Placement"><Hex bytes="1">30</Hex></PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>10 - Drawer Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreenButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.DollyIn 0.5</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.DollyOut 0.5</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.PedestalUp 0.5</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.PedestalDown 0.5</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TruckLeft 0.5</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TruckRight 0.5</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.PanLeft 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.PanRight 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TurnDollyLeft 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TurnDollyRight 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TiltCameraUp 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TiltCameraDown 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.RollCameraLeft 3 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.RollCameraRight 3 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.ResetCamera</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.ActiveCamera.FieldOfView = Val(Me.Text)</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.ActiveCamera.zNear = Val(Me.Text)</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
  <HookInstance>
   <ItemName>KeyDown</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Function KeyDown(Key As String) As Boolean</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.ActiveCamera.zFar = Val(Me.Text)</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine>End Function</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TiltDollyUp 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.TiltDollyDown 2 ' degrees</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PopupMenu</Superclass>
  <HookInstance>
   <ItemName>Change</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Change()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if frmMain.CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>frmMain.CurrentScene.CameraIndex = Me.ListIndex</SourceLine>
    <SourceLine>frmMain.Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Dolly In</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">48</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdDollyIn</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Dolly Out</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">31</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">72</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdDollyOut</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Pedestal Up</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">32</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">96</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdPedestalUp</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Pedestal Down</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">33</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">120</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdPedestalDown</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>3</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Truck Left</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">34</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">144</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTruckLeft</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>4</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Truck Right</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">35</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">168</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTruckRight</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>5</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Pan Left</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">36</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">72</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdPanLeft</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>6</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Pan Right</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">37</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">96</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdPanRight</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>7</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Turn Dolly Left</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">38</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">191</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTurnDollyLeft</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>8</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Turn Dolly Right</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">39</Hex></PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">215</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTurnDollyRight</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>9</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Tilt Camera Up</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">10</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">168</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTiltCameraUp</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>10</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Tilt Camera Down</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">11</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">192</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTiltCameraDown</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>11</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Roll Camera Left</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">12</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">120</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdRollCameraLeft</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>12</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Roll Camera Right</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">13</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">144</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdRollCameraRight</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>13</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">ResetCamera</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">14</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">48</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdResetCamera</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>14</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Multiline">False</PropertyVal>
  <PropertyVal Name="TextColor"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="TextAlign"><Hex bytes="1">32</Hex></PropertyVal>
  <PropertyVal Name="Text">FOV:</PropertyVal>
  <PropertyVal Name="TabIndex">15</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">47</PropertyVal>
  <PropertyVal Name="Top">216</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">lblFOV</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <ControlIndex>15</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="Alignment"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="LimitText"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="ReadOnly">False</PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="TextColor"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Password">False</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">16</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">50</PropertyVal>
  <PropertyVal Name="Top">215</PropertyVal>
  <PropertyVal Name="Left">200</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">txtFOV</PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>16</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Multiline">False</PropertyVal>
  <PropertyVal Name="TextColor"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="TextAlign"><Hex bytes="1">32</Hex></PropertyVal>
  <PropertyVal Name="Text">Z-Near:</PropertyVal>
  <PropertyVal Name="TabIndex">17</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">47</PropertyVal>
  <PropertyVal Name="Top">240</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">lblZNear</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <ControlIndex>17</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="Alignment"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="LimitText"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="ReadOnly">False</PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="TextColor"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Password">False</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">18</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">50</PropertyVal>
  <PropertyVal Name="Top">239</PropertyVal>
  <PropertyVal Name="Left">200</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">txtZNear</PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>18</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Multiline">False</PropertyVal>
  <PropertyVal Name="TextColor"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="TextAlign"><Hex bytes="1">32</Hex></PropertyVal>
  <PropertyVal Name="Text">Z-Far:</PropertyVal>
  <PropertyVal Name="TabIndex">19</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">47</PropertyVal>
  <PropertyVal Name="Top">264</PropertyVal>
  <PropertyVal Name="Left">141</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">lblZFar</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <ControlIndex>19</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="Alignment"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="LimitText"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="ReadOnly">False</PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="TextColor"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Password">False</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">20</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">50</PropertyVal>
  <PropertyVal Name="Top">263</PropertyVal>
  <PropertyVal Name="Left">200</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">txtZFar</PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>20</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Tilt Dolly Up</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">21</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">239</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTiltDollyUp</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>21</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Caption">Tilt Dolly Down</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">22</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">109</PropertyVal>
  <PropertyVal Name="Top">263</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">cmdTiltDollyDown</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>22</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PopupMenu</ControlClass>
  <ItemName>PopupMenu</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0.0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="ListIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="InitialValue"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">23</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">230</PropertyVal>
  <PropertyVal Name="Top">14</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">comCamera</PropertyVal>
  <PropertyVal Name="Super">PopupMenu</PropertyVal>
  <ControlIndex>23</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Window" ID="893575167">
 <ObjName>frmMain</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Self.MouseCursor = System.Cursors.StandardPointer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loadToolbar</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Paint</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Paint(g As Graphics, areas() As REALbasic.Rect)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Surface.Render </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>KeyDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function KeyDown(Key As String) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>handleKey Key</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>actionOpen</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub actionOpen()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim dlg As new OpenDialog</SourceLine>
   <SourceLine>Dim x3File As FolderItem</SourceLine>
   <SourceLine>Dim x3AllTypes As new FileType // All X3 file types</SourceLine>
   <SourceLine>Dim x3mType As new FileType // X3 model files</SourceLine>
   <SourceLine>Dim x3sType As new FileType // X3 scene files</SourceLine>
   <SourceLine>Dim io As new X3Core.X3IO</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>x3AllTypes.Name = "All X3 files" ' all X3 file types</SourceLine>
   <SourceLine>x3AllTypes.Name = "All X3 file types"</SourceLine>
   <SourceLine>x3AllTypes.Extensions = ".x3m;.x3s"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>x3mType.Name = "X3 Models" ' create X3 Model type</SourceLine>
   <SourceLine>x3mType.Extensions = ".x3m"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>x3sType.Name = "X3 Scenes" ' create X3 Scene type</SourceLine>
   <SourceLine>x3sType.Extensions = ".x3s"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dlg.Filter = x3AllTypes + x3mType + x3sType</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>x3File = dlg.ShowModal</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if x3File &lt;&gt; nil then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CurrentModel = nil</SourceLine>
   <SourceLine>CurrentScene = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Right(x3File.Name, 4) = ".x3m" then // x3 model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Surface.MakeCurrent</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, new X3Core.X3Light(0, 1, 1) // enable a default light for the model</SourceLine>
   <SourceLine>X3_SetPerspective 0, 0, Surface.Width, Surface.Height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tbMain.Item(1).Enabled = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>frmCamera.Hide()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CurrentModel = io.LoadModel(x3File)</SourceLine>
   <SourceLine>CurrentModel.Unitize()</SourceLine>
   <SourceLine>CurrentModel.Center()</SourceLine>
   <SourceLine>Surface.Render</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif Right(x3File.Name, 4) = ".x3s" then // x3 scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Surface.MakeCurrent</SourceLine>
   <SourceLine>X3_DisableAllLights() // disable all lights since lights sources are defined in the scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tbMain.Item(1).Enabled = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CurrentScene = io.LoadScene(x3File)</SourceLine>
   <SourceLine>CurrentScene.SetViewport 0, 0, Surface.Width, Surface.Height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>frmCamera.Show()</SourceLine>
   <SourceLine>frmCamera.LoadSceneCameras()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Surface.Render</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>loadToolbar</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub loadToolbar()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim button As ToolButton</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Open</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>button = new ToolButton</SourceLine>
   <SourceLine>button.Name = "toolOpen"</SourceLine>
   <SourceLine>button.Style = ToolButton.ToolStylePushButton</SourceLine>
   <SourceLine>button.Caption = "Open"</SourceLine>
   <SourceLine>'button.Icon = icon_users</SourceLine>
   <SourceLine>tbMain.Append button</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>button = new ToolButton</SourceLine>
   <SourceLine>button.Name = "toolCamera"</SourceLine>
   <SourceLine>button.Style = ToolButton.ToolStylePushButton</SourceLine>
   <SourceLine>button.Caption = "Camera"</SourceLine>
   <SourceLine>button.Enabled = False</SourceLine>
   <SourceLine>'button.Icon = icon_users</SourceLine>
   <SourceLine>tbMain.Append button</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Snapshot</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>button = new ToolButton</SourceLine>
   <SourceLine>button.Name = "toolSnapshot"</SourceLine>
   <SourceLine>button.Style = ToolButton.ToolStylePushButton</SourceLine>
   <SourceLine>button.Caption = "Snapshot"</SourceLine>
   <SourceLine>'button.Icon = icon_users</SourceLine>
   <SourceLine>tbMain.Append button</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>actionCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub actionCamera()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>frmCamera.Show()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>actionSnapshot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub actionSnapshot()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim ss As Picture</SourceLine>
   <SourceLine>Dim f As FolderItem</SourceLine>
   <SourceLine>Dim dlg As new SaveAsDialog</SourceLine>
   <SourceLine>Dim pngType As new FileType // PNG files</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Surface.MakeCurrent()</SourceLine>
   <SourceLine>ss = X3_Snapshot(0, 0, Surface.Width, Surface.Height)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pngType.Name = "Portable Network Graphics" </SourceLine>
   <SourceLine>pngType.Extensions = ".png"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dlg.Filter = pngType</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>f = dlg.ShowModal()</SourceLine>
   <SourceLine>if f &lt;&gt; nil then</SourceLine>
   <SourceLine>ss.Save f, Picture.SaveAsPNG</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>handleKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub handleKey(Key As String)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if CurrentScene &lt;&gt; nil then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case Asc(Lowercase(Key))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 11 // page up</SourceLine>
   <SourceLine>CurrentScene.PedestalUp 0.2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 12 // page down</SourceLine>
   <SourceLine>CurrentScene.PedestalDown 0.2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 28 // left arrow</SourceLine>
   <SourceLine>CurrentScene.TurnDollyLeft 1.5</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 29 // right arrow</SourceLine>
   <SourceLine>CurrentScene.TurnDollyRight 1.5</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 30 // up arrow</SourceLine>
   <SourceLine>CurrentScene.DollyIn 0.2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 31 // down arrow</SourceLine>
   <SourceLine>CurrentScene.DollyOut 0.2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 97 // a</SourceLine>
   <SourceLine>CurrentScene.TruckLeft 0.2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 100 // d</SourceLine>
   <SourceLine>CurrentScene.TruckRight 0.2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 119 // w</SourceLine>
   <SourceLine>CurrentScene.TiltDollyUp 1.5</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 115 // s</SourceLine>
   <SourceLine>CurrentScene.TiltDollyDown 1.5</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>MsgBox Str(Asc(Key))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Surface.Render</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Key As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>CurrentModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CurrentModel As X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CurrentModel As X3Core.X3Model</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MousePrevX</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MousePrevX As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MousePrevX As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MousePrevY</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MousePrevY As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MousePrevY As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>CurrentScene</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CurrentScene As X3Core.X3Scene</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CurrentScene As X3Core.X3Scene</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MenuBar">1439348735</PropertyVal>
 <PropertyVal Name="MacProcID"><Hex bytes="1">30</Hex></PropertyVal>
 <PropertyVal Name="FullScreenButton">False</PropertyVal>
 <PropertyVal Name="MinimizeButton">True</PropertyVal>
 <PropertyVal Name="MaximizeButton">True</PropertyVal>
 <PropertyVal Name="LiveResize">True</PropertyVal>
 <PropertyVal Name="Resizeable">True</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Title">X3 Viewer</PropertyVal>
 <PropertyVal Name="Backdrop">0</PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="Composite">False</PropertyVal>
 <PropertyVal Name="Frame"><Hex bytes="1">30</Hex></PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">400</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">400</PropertyVal>
 <PropertyVal Name="Width">600</PropertyVal>
 <PropertyVal Name="Placement"><Hex bytes="1">30</Hex></PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>FullScreenButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>10 - Drawer Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MousePrevX</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MousePrevY</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>OpenGLSurface</Superclass>
  <HookInstance>
   <ItemName>Open</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Open()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>X3_Initialize</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>Resized</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Resized()</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>CurrentScene.SetViewport 0, 0, Surface.Width, Surface.Height</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>X3_SetPerspective 0, 0, Surface.Width, Surface.Height, 60.0, 0.01</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>Render</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Function Render() As Boolean</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>OpenGL.glClearColor(0.2, 0.2, 0.2, 1) ' set the background color</SourceLine>
    <SourceLine>OpenGL.glClear(OpenGL.GL_COLOR_BUFFER_BIT + OpenGL.GL_DEPTH_BUFFER_BIT)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>X3_RenderScene CurrentScene</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>elseif CurrentModel &lt;&gt; nil then</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>OpenGL.glPushMatrix</SourceLine>
    <SourceLine>OpenGL.glTranslatef 0, 0, -2</SourceLine>
    <SourceLine>X3_RenderModel CurrentModel</SourceLine>
    <SourceLine>OpenGL.glPopMatrix</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Function</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>MouseDown</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Function MouseDown(x as Integer, y as Integer) As Boolean</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>MousePrevX = x</SourceLine>
    <SourceLine>MousePrevY = y</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>return true</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Function</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>MouseDrag</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub MouseDrag(x as Integer, y as Integer)</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if CurrentScene &lt;&gt; nil then</SourceLine>
    <SourceLine>X3_RotateWithXY CurrentScene.Camera(CurrentScene.CameraIndex).DollyRotation, -(y - MousePrevY), -(x - MousePrevX)</SourceLine>
    <SourceLine>X3_RotateWithXY CurrentScene.Camera(CurrentScene.CameraIndex).CameraRotation, -(y - MousePrevY), -(x - MousePrevX)</SourceLine>
    <SourceLine>Surface.Render</SourceLine>
    <SourceLine>elseif CurrentModel &lt;&gt; nil then</SourceLine>
    <SourceLine>X3_RotateWithXY CurrentModel.Rotation, (y - MousePrevY), (x - MousePrevX)</SourceLine>
    <SourceLine>Surface.Render</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>MousePrevX = x</SourceLine>
    <SourceLine>MousePrevY = y</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>MainToolbar</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action(item As ToolItem)</SourceLine>
    <SourceLine>' www.Xojo3D.com</SourceLine>
    <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>select case item.Name</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>case "toolCamera"</SourceLine>
    <SourceLine>actionCamera</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>case "toolOpen"</SourceLine>
    <SourceLine>actionOpen</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>case "toolSnapshot"</SourceLine>
    <SourceLine>actionSnapshot</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end select</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>OpenGLSurface</ControlClass>
  <ItemName>OpenGLSurface</ItemName>
  <PropertyVal Name="Name">Surface</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="Top"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="Width">600</PropertyVal>
  <PropertyVal Name="Height">400</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">True</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="TabPanelIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="TabIndex"><Hex bytes="1">30</Hex></PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="ColorBits">24</PropertyVal>
  <PropertyVal Name="DepthBits">24</PropertyVal>
  <PropertyVal Name="DoubleBuffer">True</PropertyVal>
  <PropertyVal Name="Super">OpenGLSurface</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>MainToolbar</ControlClass>
  <ItemName>MainToolbar</ItemName>
  <PropertyVal Name="Name">tbMain</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">20</PropertyVal>
  <PropertyVal Name="Width">100</PropertyVal>
  <PropertyVal Name="Height">32</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="Super">MainToolbar</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Module" ID="1394687">
 <ObjName>X3Core</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>renderPolygon</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub renderPolygon(poly As X3Core.X3Polygon, ByRef currMat As Integer, ByRef currIndex As Integer)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As X3Core.X3Model</SourceLine>
   <SourceLine>Dim n As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim col As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model = poly.ParentModel</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' is this polygon mapped with a texture, and if so, is the UV coordinates configured?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ((poly.TIndex &gt;= 0) and (poly.UVIndex.Ubound &gt;= poly.VIndex.Ubound)) or (poly.SIndex &gt;= 0) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' loop through all the vertexes of the polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VNIndex.Ubound = poly.VIndex.Ubound then ' normal per vertex?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' yes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>n = model.Normal(poly.VNIndex(j))</SourceLine>
   <SourceLine>OpenGL.glNormal3d n.X, n.Y, n.Z</SourceLine>
   <SourceLine>OpenGL.glTexCoord2d model.UVMap(poly.UVIndex(j)).U, model.UVMap(poly.UVIndex(j)).V ' set the texture UV-coordinates for next vertex</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z ' add the vertex to the OpenGL vertex list</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set normal for whole polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = model.Normal(poly.NIndex)</SourceLine>
   <SourceLine>OpenGL.glNormal3d n.X, n.Y, n.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' render vertices</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>OpenGL.glTexCoord2d model.UVMap(poly.UVIndex(j)).U, model.UVMap(poly.UVIndex(j)).V ' set the texture UV-coordinates for next vertex</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z ' add the vertex to the OpenGL vertex list</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif poly.MIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this polygon uses material settings</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if currMat &lt;&gt; 2 then ' currently using materials?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>currMat = 2</SourceLine>
   <SourceLine>currIndex = -1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if currIndex &lt;&gt; poly.MIndex then ' still using same material?</SourceLine>
   <SourceLine>' no, so set new material</SourceLine>
   <SourceLine>X3_SetMaterial model.Material(poly.MIndex)</SourceLine>
   <SourceLine>currIndex = poly.MIndex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' loop through all the vertexes of the polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VNIndex.Ubound = poly.VIndex.Ubound then ' normal per vertex?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' yes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>n = model.Normal(poly.VNIndex(j))</SourceLine>
   <SourceLine>OpenGL.glNormal3d n.X, n.Y, n.Z</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set normal for whole polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = model.Normal(poly.NIndex)</SourceLine>
   <SourceLine>OpenGL.glNormal3d n.X, n.Y, n.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' render vertices</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this polygon uses a normal RGBA color</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if currMat &lt;&gt; 0 then ' currently using RGBA?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>currMat = 0</SourceLine>
   <SourceLine>currIndex = -1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if currIndex &lt;&gt; poly.CIndex then ' still using same RGBA color?</SourceLine>
   <SourceLine>' no, so set new RGBA color</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.CIndex &gt;= 0 then ' is the color index pointing to a color?</SourceLine>
   <SourceLine>' yes, so set the color</SourceLine>
   <SourceLine>col = model.ColorPal(poly.CIndex)</SourceLine>
   <SourceLine>OpenGL.glColor4d(col.Red, col.Green, col.Blue, col.Alpha)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>' no, so make the fill color opague white</SourceLine>
   <SourceLine>OpenGL.glColor4d(1, 1, 1, 1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' loop through all the vertexes of the polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VNIndex.Ubound = poly.VIndex.Ubound then ' normal per vertex?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' yes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>n = model.Normal(poly.VNIndex(j))</SourceLine>
   <SourceLine>OpenGL.glNormal3d n.X, n.Y, n.Z</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set normal for whole polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = model.Normal(poly.NIndex)</SourceLine>
   <SourceLine>OpenGL.glNormal3d n.X, n.Y, n.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' render vertices</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>poly As X3Core.X3Polygon, ByRef currMat As Integer, ByRef currIndex As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_CreateSprite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_CreateSprite(initSheet As Picture, spriteWidth As Integer, spriteHeight As Integer, imageCount As Integer) As X3Core.X3Model</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As X3Core.X3Model</SourceLine>
   <SourceLine>Dim p As X3Core.X3Polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' create a new model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model = new X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' instantiate a sprite from our sprite sheet, and add it to the model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Model.Sprite.Append new X3Core.X3Sprite(initSheet, spriteWidth, spriteHeight, imageCount)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' add vertices to the model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Model.Vertex.Append new X3Core.X3Vector(-1, 1, 0)</SourceLine>
   <SourceLine>Model.Vertex.Append new X3Core.X3Vector(-1, -1, 0)</SourceLine>
   <SourceLine>Model.Vertex.Append new X3Core.X3Vector(1, -1, 0)</SourceLine>
   <SourceLine>Model.Vertex.Append new X3Core.X3Vector(1, 1, 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' add the normal to the model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Model.Normal.Append new X3Core.X3Vector(0, 0, 1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' create and add a sprite polygon to the model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>p = new X3Core.X3Polygon</SourceLine>
   <SourceLine>p.VIndex.Append 0 ' vertices</SourceLine>
   <SourceLine>p.VIndex.Append 1</SourceLine>
   <SourceLine>p.VIndex.Append 2</SourceLine>
   <SourceLine>p.VIndex.Append 3</SourceLine>
   <SourceLine>p.NIndex = 0 ' normal</SourceLine>
   <SourceLine>p.SIndex = 0 ' point to sprite</SourceLine>
   <SourceLine>model.AppendPolygon p</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initSheet As Picture, spriteWidth As Integer, spriteHeight As Integer, imageCount As Integer</ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_EnableLight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_EnableLight(lightIndex As Integer, light As X3Core.X3Light)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glLightfv lightIndex, OpenGL.GL_POSITION, light.Position.GetMemoryBlock ' set position</SourceLine>
   <SourceLine>OpenGL.glLightfv lightIndex, OpenGL.GL_AMBIENT, light.Ambient.GetMemoryBlock ' set ambience</SourceLine>
   <SourceLine>OpenGL.glLightfv lightIndex, OpenGL.GL_DIFFUSE, light.Diffuse.GetMemoryBlock ' set diffuse</SourceLine>
   <SourceLine>OpenGL.glLightfv lightIndex, OpenGL.GL_SPECULAR, light.Specular.GetMemoryBlock ' set specular</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable lightIndex ' enable the light</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>lightIndex As Integer, light As X3Core.X3Light</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_Initialize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_Initialize()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' enable depth buffer to ensure objects in distance is not drawn over objects closer to us</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_DEPTH_TEST</SourceLine>
   <SourceLine>OpenGL.glDepthMask OpenGL.GL_TRUE</SourceLine>
   <SourceLine>OpenGL.glDepthFunc OpenGL.GL_LEQUAL ' set the depth buffer function to "less"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' make sure only back faces are culled and enable culling</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glCullFace OpenGL.GL_BACK</SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_CULL_FACE</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' enable OpenGL lighing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_LIGHTING</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' enable blending for transparent models</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_BLEND</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set the blending function for alpha colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glBlendFunc OpenGL.GL_SRC_ALPHA, OpenGL.GL_ONE_MINUS_SRC_ALPHA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' render buffer storage</SourceLine>
   <SourceLine>dim mb as new MemoryBlock(16)</SourceLine>
   <SourceLine>OpenGL.glGetIntegerv OpenGL.GL_ALPHA_BITS, mb // shouldn't be zero</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_LoadRGBATexture</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_LoadRGBATexture(RGBABitmap As MemoryBlock, width As Integer, height As Integer) As Integer</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim idMB As MemoryBlock</SourceLine>
   <SourceLine>Dim oglName As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ask OpenGL for an ID that we can use for our texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>idMB = new MemoryBlock(8) ' create a memory block into which OpenGL will store the ID value</SourceLine>
   <SourceLine>OpenGL.glGenTextures(1, idMB) ' get the ID from OpenGL</SourceLine>
   <SourceLine>oglName = idMB.Long(0) ' store the value returned by OpenGL in an integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' specify to OpenGL how this texture should be rendered</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glBindTexture(OpenGL.GL_TEXTURE_2D, OGLName) ' select the texture id that OpenGL allocated for our texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glTexParameteri(OpenGL.GL_TEXTURE_2D, OpenGL.GL_TEXTURE_MIN_FILTER, OpenGL.GL_LINEAR) // set up settings</SourceLine>
   <SourceLine>OpenGL.glTexParameteri(OpenGL.GL_TEXTURE_2D, OpenGL.GL_TEXTURE_MAG_FILTER, OpenGL.GL_LINEAR) // set up some more settings</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' now we load the image bitmap</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glTexImage2d(OpenGL.GL_TEXTURE_2D, 0, 4, width, height , 0, OpenGL.GL_RGBA, OpenGL.GL_UNSIGNED_BYTE, RGBABitmap)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oglName</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>RGBABitmap As MemoryBlock, width As Integer, height As Integer</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_PictureFromTexture</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_PictureFromTexture(text As X3Core.X3Texture) As Picture</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim pic as new Picture(text.Width, text.height, 32)</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim pixIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pixIndex = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>j = 0</SourceLine>
   <SourceLine>while j &lt; text.height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt; text.width</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pic.RGBSurface.Pixel(i, j) = RGB(text.RGBABitmap.UInt8Value(pixIndex), text.RGBABitmap.UInt8Value(pixIndex + 1), text.RGBABitmap.UInt8Value(pixIndex + 2), text.RGBABitmap.UInt8Value(pixIndex + 3))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pixIndex = pixIndex + 4</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>j = j + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return pic</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>text As X3Core.X3Texture</ItemParams>
  <ItemResult>Picture</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_RenderModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_RenderModel(model As X3Core.X3Model)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim poly As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim prevUB As Integer</SourceLine>
   <SourceLine>Dim bDrawing As Boolean</SourceLine>
   <SourceLine>Dim prevTIndex As Integer = -1</SourceLine>
   <SourceLine>Dim prevSIndex As Integer = -1</SourceLine>
   <SourceLine>Dim transPoly() As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim currMat As Integer = - 1 ' current material type used for polygon: 0=RGBA, 1=Texture, 2=Material</SourceLine>
   <SourceLine>Dim currIndex As Integer = -1 ' current material index</SourceLine>
   <SourceLine>Dim texture As X3Core.X3Texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_COLOR_MATERIAL ' enable use vertex colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPushMatrix ' save matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glScalef model.Scale.X, model.Scale.Y, model.Scale.Z ' set the model's scale</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glTranslatef model.Position.X, model.Position.Y, model.Position.Z ' set the model's position</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetRotation(model.Rotation) ' apply the model's rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' have we rendered this model previous innto an OpenGL display list?</SourceLine>
   <SourceLine>if (model.OGLName &gt; 0) and not model.Invalidate then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glCallList model.OGLName 'yes, so render this existing list</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Redim model.SpritePolygons(-1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' is the model loaded in OpenGL memory and invalid?</SourceLine>
   <SourceLine>if (model.OGLName &gt; 0) and model.Invalidate then</SourceLine>
   <SourceLine>' yes, so first remove the model from OpenGL memory</SourceLine>
   <SourceLine>OpenGL.glDeleteLists(model.OGLName, 1)</SourceLine>
   <SourceLine>model.OGLName = 0</SourceLine>
   <SourceLine>model.Invalidate = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' create a new OpenGL display list</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.OGLName = OpenGL.glGenLists(1)</SourceLine>
   <SourceLine>OpenGL.glNewList model.OGLName, OpenGL.GL_COMPILE</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' draw polygons</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' FIRST WE DRAW THE OPAQUE POLYGONS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevUB = -1</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Polygon.Ubound ' loop through all the polygons</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = model.Polygon(i) ' get the next polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' only draw if opaque</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ((poly.TIndex &gt;= 0) and  model.Texture(poly.TIndex).Transparent)  then ' transparent texture?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this is a polygon with a transparent texture, so store for later rendering</SourceLine>
   <SourceLine>transPoly.Append poly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (poly.MIndex &gt;= 0) and (model.Material(poly.MIndex).Ambient.Alpha &lt; 1) then ' transparent material?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this is a polygon with a transparent material, so store for later rendering</SourceLine>
   <SourceLine>transPoly.Append poly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (poly.CIndex &gt;= 0) and (model.ColorPal(poly.CIndex).Alpha &lt; 1) then ' transparent color?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this is a polygon with a transparent color, so store for later rendering</SourceLine>
   <SourceLine>transPoly.Append poly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (poly.SIndex &gt;= 0) then ' sprite?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this is a polygon with a sprite, so store for later rendering</SourceLine>
   <SourceLine>' sprites are not rendered as part of the display list because it is almost always invalidated</SourceLine>
   <SourceLine>model.SpritePolygons.Append poly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (poly.VIndex.Ubound &lt;&gt; prevUB) or (prevTIndex &lt;&gt; poly.TIndex) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' bind to texture if needed BEFORE calling glBegin</SourceLine>
   <SourceLine>if (poly.TIndex &gt;= 0) and (poly.UVIndex.Ubound &gt;= poly.VIndex.Ubound) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' first set up OpenGL for textures</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_TEXTURE_2D ' enable the use of textures</SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_COLOR_MATERIAL ' enable use vertex colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetMaterial new X3Core.X3Material ' reset OpenGL's material settings</SourceLine>
   <SourceLine>OpenGL.glColor4d(1, 1, 1, 1) ' reset color to pure white</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>currMat = 1</SourceLine>
   <SourceLine>currIndex = -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' now bind to texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>texture = model.Texture(poly.TIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' if texture not already loaded into OpenGL, let's first load the texture into OpenGL</SourceLine>
   <SourceLine>if texture.OGLName &lt;= 0 then</SourceLine>
   <SourceLine>texture.OGLName = X3_LoadRGBATexture(texture.RGBABitmap, texture.Width, texture.Height)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glBindTexture(OpenGL.GL_TEXTURE_2D, texture.OGLName) ' bind to the polygon's texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (poly.MIndex &gt;= 0) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set up OpenGL for materials</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_TEXTURE_2D ' disable the use of textures</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_COLOR_MATERIAL ' disable overwriting of material properties with vertex colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set up OpenGL for RGBA colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_TEXTURE_2D ' disable the use of textures</SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_COLOR_MATERIAL ' disable overwriting of material properties with vertex colors</SourceLine>
   <SourceLine>X3_SetMaterial new X3Core.X3Material ' reset OpenGL's material settings</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case poly.VIndex.Ubound</SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_TRIANGLES ' start drawing triangle polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>case 3</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_QUADS ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevUB = poly.VIndex.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_POLYGON ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>renderPolygon poly, currMat, currIndex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevTIndex = poly.TIndex ' store texture ID for next iteration</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' NOW WE DRAW THE TRANSPARENT POLYGONS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevUB = -1</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to transPoly.Ubound ' loop through all the transparent polygons</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = transPoly(i) ' get the next polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (poly.VIndex.Ubound &lt;&gt; prevUB) or (prevTIndex &lt;&gt; poly.TIndex) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' bind to texture if needed BEFORE calling glBegin</SourceLine>
   <SourceLine>if (poly.TIndex &gt;= 0) and (poly.UVIndex.Ubound &gt;= poly.VIndex.Ubound) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' first set up OpenGL for textures</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_TEXTURE_2D ' enable the use of textures</SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_COLOR_MATERIAL ' enable use vertex colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetMaterial new X3Core.X3Material ' reset OpenGL's material settings</SourceLine>
   <SourceLine>OpenGL.glColor4d(1, 1, 1, 1) ' reset color to pure white</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>currMat = 1</SourceLine>
   <SourceLine>currIndex = -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' now bind to texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>texture = model.Texture(poly.TIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' if texture not already loaded into OpenGL, let's first load the texture into OpenGL</SourceLine>
   <SourceLine>if texture.OGLName &lt;= 0 then</SourceLine>
   <SourceLine>texture.OGLName = X3_LoadRGBATexture(texture.RGBABitmap, texture.Width, texture.Height)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glBindTexture(OpenGL.GL_TEXTURE_2D, model.Texture(poly.TIndex).OGLName) ' bind to the polygon's texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (poly.MIndex &gt;= 0) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set up OpenGL for materials</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_TEXTURE_2D ' disable the use of textures</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_COLOR_MATERIAL ' disable overwriting of material properties with vertex colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set up OpenGL for RGBA colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_TEXTURE_2D ' disable the use of textures</SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_COLOR_MATERIAL ' disable overwriting of material properties with vertex colors</SourceLine>
   <SourceLine>X3_SetMaterial new X3Core.X3Material ' reset OpenGL's material settings</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case poly.VIndex.Ubound</SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_TRIANGLES ' start drawing triangle polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>case 3</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_QUADS ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevUB = poly.VIndex.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_POLYGON ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>renderPolygon poly, currMat, currIndex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevTIndex = poly.TIndex ' store texture ID for next iteration</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEndList ' end of display list</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glCallList model.OGLName ' render the display  list</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' NOW WE DRAW THE SPRITE POLYGONS</SourceLine>
   <SourceLine>' because sprites change all the time and invalidates the polygons linked to them, so there is no point in rendering them as part of the display list</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.SpritePolygons.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if currMat &lt;&gt; 1 then ' currently using textures?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' no, so set up OpenGL for textures</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_TEXTURE_2D ' enable the use of textures</SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_COLOR_MATERIAL ' enable use vertex colors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetMaterial new X3Core.X3Material ' reset OpenGL's material settings</SourceLine>
   <SourceLine>OpenGL.glColor4d(1, 1, 1, 1) ' reset color to pure white</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevSIndex = -1</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.SpritePolygons.Ubound ' loop through all the transparent polygons</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = model.SpritePolygons(i) ' get the next polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' bind to sprite sheet of the sprite</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if prevSIndex &lt;&gt; poly.SIndex then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' load spritesheet into OpenGL memory</SourceLine>
   <SourceLine>if model.Sprite(poly.SIndex).SpriteSheet.OGLName &lt;= 0 then</SourceLine>
   <SourceLine>model.Sprite(poly.SIndex).SpriteSheet.OGLName = X3_LoadRGBATexture(model.Sprite(poly.SIndex).SpriteSheet.RGBABitmap, model.Sprite(poly.SIndex).SpriteSheet.Width, model.Sprite(poly.SIndex).SpriteSheet.Height)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glBindTexture(OpenGL.GL_TEXTURE_2D, model.Sprite(poly.SIndex).SpriteSheet.OGLName) ' bind to the polygon's texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_QUADS ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>OpenGL.glTexCoord2d model.UVMap(poly.UVIndex(j)).U, model.UVMap(poly.UVIndex(j)).V ' set the texture UV-coordinates for next vertex</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z ' add the vertex to the OpenGL vertex list</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevSIndex = poly.SIndex ' store sprite ID for next iteration</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPopMatrix ' restore matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>model As X3Core.X3Model</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_RotateWithXY</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_RotateWithXY(q As X3Quaternion, xAngle As Double, yAngle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As new X3Quaternion</SourceLine>
   <SourceLine>Dim tmpQuat As new X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Formula: [new quaternion] = [x-axis rotation quaternion] x [y-axis rotation quaternion] x [self]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' apply pitch rotation (around x-axis)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if xAngle &lt;&gt; 0 then</SourceLine>
   <SourceLine>tmpQuat.FromEulerRotation(1, 0, 0, xAngle)</SourceLine>
   <SourceLine>result.Multiply(tmpQuat)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' apply yaw rotation (around y-axis)</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>if yAngle &lt;&gt; 0 then</SourceLine>
   <SourceLine>tmpQuat.FromEulerRotation(0, 1, 0, yAngle)</SourceLine>
   <SourceLine>result.Multiply(tmpQuat)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result.Multiply(q) ' multiply result rotation quaternion with give quaternion</SourceLine>
   <SourceLine>result.Normalize ' normalize result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' assign result to given quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>q.W = result.W</SourceLine>
   <SourceLine>q.X = result.X</SourceLine>
   <SourceLine>q.Y = result.Y</SourceLine>
   <SourceLine>q.Z = result.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>q As X3Quaternion, xAngle As Double, yAngle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_SetMaterial</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_SetMaterial(material As X3Core.X3Material)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim matMB As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set ambient values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>matMB = material.Ambient.GetMemoryBlock()</SourceLine>
   <SourceLine>OpenGL.glMaterialfv(OpenGL.GL_FRONT, OpenGL.GL_AMBIENT, matMB) ' apply ambient values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set diffuse values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>matMB = material.Diffuse.GetMemoryBlock()</SourceLine>
   <SourceLine>OpenGL.glMaterialfv(OpenGL.GL_FRONT, OpenGL.GL_DIFFUSE, matMB) ' apply diffuse values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set specular values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>matMB = material.Specular.GetMemoryBlock()</SourceLine>
   <SourceLine>OpenGL.glMaterialfv(OpenGL.GL_FRONT, OpenGL.GL_SPECULAR, matMB) ' apply specular values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set shininess value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glMaterialf(OpenGL.GL_FRONT_AND_BACK, OpenGL.GL_SHININESS, material.Shininess) ' apply shininess values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>material As X3Core.X3Material</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_SetPerspective</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_SetPerspective(x As Double, y As Double, width As Double, height As Double, fov As Double = 60.0, zNear As Double = 1, zFar As Double = 100)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glViewport x, y, width, height ' set the viewport rectangle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set up the perspective projection settings</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glMatrixMode OpenGL.GL_PROJECTION ' select the projection matrix</SourceLine>
   <SourceLine>OpenGL.glLoadIdentity ' clear the projection matrix</SourceLine>
   <SourceLine>OpenGL.gluPerspective fov, width / height, zNear, zFar ' set up our own custom projection matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' select and reset the modelview matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glMatrixMode OpenGL.GL_MODELVIEW ' select the modelview matrix</SourceLine>
   <SourceLine>OpenGL.glLoadIdentity ' clear the modelview matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>x As Double, y As Double, width As Double, height As Double, fov As Double = 60.0, zNear As Double = 1, zFar As Double = 100</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_SetRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_SetRotation(rotation As X3Quaternion)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim angle As Double ' Euler angle of rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>angle = ACos(rotation.w) * 2 * X3_180OverPi ' calculate angle from quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glRotated angle, rotation.x, rotation.y, rotation.z ' apply Euler rotation with OpenGL</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rotation As X3Quaternion</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_Str</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_Str(d As Double) As String</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (d \ 1) = d then // whole number?</SourceLine>
   <SourceLine>return Str(d, "-0")</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return Str(d, "-0.#######")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>d As Double</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_PickPolygon</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_PickPolygon(model As X3Core.X3Model, x As Integer, y As Integer) As X3Core.X3Polygon</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim pixelData As New MemoryBlock(4)</SourceLine>
   <SourceLine>Dim pickIndex As Integer</SourceLine>
   <SourceLine>Dim poly As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim colMB As new MemoryBlock(4)</SourceLine>
   <SourceLine>Dim result As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim prevUB As Integer</SourceLine>
   <SourceLine>Dim bDrawing As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHTING ' disable lighting</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPushMatrix ' save matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' apply the model's rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetRotation(model.Rotation)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' clear the background and depth buffer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glClearColor(0, 0, 0, 1)</SourceLine>
   <SourceLine>OpenGL.glClear(OpenGL.GL_COLOR_BUFFER_BIT + OpenGL.GL_DEPTH_BUFFER_BIT)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPolygonMode(OpenGL.GL_FRONT, OpenGL.GL_FILL) ' draw filled polygons</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' render the polygon map</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevUB = -1</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Polygon.Ubound ' loop through all the polygons</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = model.Polygon(i) ' get the next polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (poly.VIndex.Ubound &lt;&gt; prevUB) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case poly.VIndex.Ubound</SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_TRIANGLES ' start drawing triangle polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>case 3</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_QUADS ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prevUB = poly.VIndex.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine>OpenGL.glBegin OpenGL.GL_POLYGON ' start drawing quad polygons</SourceLine>
   <SourceLine>bDrawing = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set the map color of the polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>colMB.UInt32Value(0) = i + 1</SourceLine>
   <SourceLine>OpenGL.glColor3ub(colMB.UInt8Value(0), colMB.UInt8Value(1), colMB.UInt8Value(2))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' add the vertexes of the polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for j = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>OpenGL.glVertex3d model.Vertex(poly.VIndex(j)).X, model.Vertex(poly.VIndex(j)).Y, model.Vertex(poly.VIndex(j)).Z</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>bDrawing = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bDrawing then</SourceLine>
   <SourceLine>OpenGL.glEnd ' end drawing polygons</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' get the pixel value at the given (x, y) position</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glReadPixels(x, y, 1, 1, OpenGL.GL_RGB, OpenGL.GL_UNSIGNED_BYTE, pixelData)</SourceLine>
   <SourceLine>pickIndex = pixelData.UInt32Value(0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' did we get a pixel at (x, y) other than black?</SourceLine>
   <SourceLine>if pickIndex &gt; 0 then</SourceLine>
   <SourceLine>result = model.Polygon(pickIndex - 1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPopMatrix ' restore matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glEnable OpenGL.GL_LIGHTING ' enable lighting</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>model As X3Core.X3Model, x As Integer, y As Integer</ItemParams>
  <ItemResult>X3Core.X3Polygon</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_ModelToJSON</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_ModelToJSON(model As X3Core.X3Model) As String</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim addedChild As Boolean</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim poly As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim text As X3Core.X3Texture</SourceLine>
   <SourceLine>Dim pic As Picture</SourceLine>
   <SourceLine>Dim firstValue As Boolean</SourceLine>
   <SourceLine>Dim modelJSON() As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this method generates X3 Data Format JSON from an X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>addedChild = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "{"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """x3model"":{"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' colorpal</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.ColorPal.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>modelJSON.Append """colorpal"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Alpha)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.ColorPal.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Alpha)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Material.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """material"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Material.Ubound</SourceLine>
   <SourceLine>if i &gt; 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Alpha)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Alpha)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Alpha)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Shininess)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' vertex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Vertex.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """vertex"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(0).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(0).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(0).Z)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.Vertex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(i).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(i).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(i).Z)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' uvmap</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.UVMap.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """uvmap"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(0).U)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(0).V)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.UVMap.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(i).U)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(i).V)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' normal</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Normal.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """normal"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(0).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(0).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(0).Z)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.Normal.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(i).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(i).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(i).Z)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' normal</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Polygon.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """polygon"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Polygon.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = model.Polygon(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if i &gt; 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "{" ' polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>firstValue = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.TIndex &gt;= 0 then</SourceLine>
   <SourceLine>modelJSON.Append """ti"":" + Str(poly.TIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append """uvi"":["</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.UVIndex(0))</SourceLine>
   <SourceLine>for j = 1 to poly.UVIndex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.UVIndex(j))</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>modelJSON.Append "]"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif poly.MIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """mi"":" + Str(poly.MIndex)</SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif poly.CIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """ci"":" + Str(poly.CIndex)</SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.NIndex &gt;= 0 then</SourceLine>
   <SourceLine>if not firstValue then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>modelJSON.Append """ni"":" + Str(poly.NIndex)</SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not firstValue then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>modelJSON.Append """vi"":["</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VIndex(0))</SourceLine>
   <SourceLine>for j = 1 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VIndex(j))</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>modelJSON.Append "]"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VNIndex.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append """vni"":["</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VNIndex(0))</SourceLine>
   <SourceLine>for j = 1 to poly.VNIndex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VNIndex(j))</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>modelJSON.Append "]"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "}"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Texture.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """texture"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Texture.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>text = model.Texture(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if i &gt; 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pic = X3_PictureFromTexture(text)</SourceLine>
   <SourceLine>modelJSON.Append """" + EncodeBase64(pic.GetData(Picture.FormatPNG), 0) + """"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "}" ' x3model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "}" ' root</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Join(modelJSON, "")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>model As X3Core.X3Model</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_RenderScene</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_RenderScene(scene As X3Core.X3Scene)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim activeCam As X3Core.X3Camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPushMatrix ' save matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set up the lights</SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt;= scene.Light.Ubound</SourceLine>
   <SourceLine>select case i </SourceLine>
   <SourceLine>case 0</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 1</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 3</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 4</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 5</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 6</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>case 7</SourceLine>
   <SourceLine>X3_EnableLight OpenGL.GL_LIGHT0, scene.Light(i)</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' select the active camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>activeCam = scene.Camera(scene.CameraIndex)</SourceLine>
   <SourceLine>X3_SetCamera activeCam</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// render all the models in the scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to scene.Model.Ubound</SourceLine>
   <SourceLine>X3_RenderModel(scene.Model(i))</SourceLine>
   <SourceLine>next i </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glPopMatrix ' restore matrix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>scene As X3Core.X3Scene</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_SetCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_SetCamera(camera As X3Core.X3Camera)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' apply the perspective settings of the camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetPerspective camera.ViewportX, camera.ViewportY, camera.ViewportWidth, camera.ViewportHeight, camera.FieldOfView, camera.zNear, camera.zFar</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' set the orientation of the camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X3_SetRotation camera.CameraRotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' position the camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glTranslatef -camera.DollyPosition.X, -camera.DollyPosition.Y, -camera.DollyPosition.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>camera As X3Core.X3Camera</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3_Snapshot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3_Snapshot(x As Integer, y As Integer, width As Integer, height As Integer) As Picture</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim pixelData As New MemoryBlock(width * height * 4)</SourceLine>
   <SourceLine>Dim result As Picture</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim heightMinOne As Integer</SourceLine>
   <SourceLine>Dim rgbMain As RGBSurface</SourceLine>
   <SourceLine>Dim pixelOffset As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glReadPixels(x, y, width, height, OpenGL.GL_RGBA, OpenGL.GL_UNSIGNED_BYTE, pixelData)</SourceLine>
   <SourceLine>pixelData.LittleEndian = True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = new Picture(width, height)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rgbMain = result.RGBSurface</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>heightMinOne = height - 1</SourceLine>
   <SourceLine>j = 0</SourceLine>
   <SourceLine>while j &lt; height</SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt; width</SourceLine>
   <SourceLine>pixelOffset = ((heightMinOne - j) * width + i) * 4</SourceLine>
   <SourceLine>rgbMain.Pixel(i, j) = RGB(pixelData.Byte(pixelOffset), pixelData.Byte(pixelOffset +1), pixelData.Byte(pixelOffset +2))</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>j = j + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>x As Integer, y As Integer, width As Integer, height As Integer</ItemParams>
  <ItemResult>Picture</ItemResult>
 </Method>
 <Method>
  <ItemName>X3_DisableAllLights</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3_DisableAllLights()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT0</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT1</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT2</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT3</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT4</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT5</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT6</SourceLine>
   <SourceLine>OpenGL.glDisable OpenGL.GL_LIGHT7</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>X3_180OverPi</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>X3_180OverPi</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>57.295779513082321</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>X3_PiOver180</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>X3_PiOver180</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>0.017453292519943</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="BuildAutomation" ID="1587267583">
 <ObjName>Build Automation</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1666613247">
 <ObjName>Linux</ObjName>
 <ObjContainerID>1587267583</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1704052735">
 <ObjName>Build</ObjName>
 <ObjContainerID>1666613247</ObjContainerID>
</block>
<block type="BuildStepsList" ID="2112894975">
 <ObjName>Mac OS X</ObjName>
 <ObjContainerID>1587267583</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="2103564287">
 <ObjName>Build</ObjName>
 <ObjContainerID>2112894975</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1656686591">
 <ObjName>Windows</ObjName>
 <ObjContainerID>1587267583</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1417129983">
 <ObjName>Build</ObjName>
 <ObjContainerID>1656686591</ObjContainerID>
</block>
<block type="Module" ID="398704639">
 <ObjName>X3Camera</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' initialize camera with default values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyPosition = new X3Core.X3Vector(0, 0, 0)</SourceLine>
   <SourceLine>DollyRotation = new X3Core.X3Quaternion()</SourceLine>
   <SourceLine>CameraRotation = new X3Core.X3Quaternion()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DollyIn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DollyIn(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim forwardVec As new X3Core.X3Vector(0, 0, -1) ' forward vector of dolly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>forwardVec.Rotate(DollyRotation) ' apply dolly rotation to (0,0,-1) to determine the forward vector of the dolly</SourceLine>
   <SourceLine>forwardVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine>forwardVec.Multiply(Distance) ' calculate the distance to move</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' move the dolly position forward with the given distance</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyPosition.Add(forwardVec)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DollyOut</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DollyOut(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyIn(-distance) ' apply action with the inverse method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PedestalDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PedestalDown(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>PedestalUp(-distance) ' apply action with the inverse method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PedestalUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PedestalUp(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim upVec As new X3Core.X3Vector(0, 1, 0) ' up vector of dolly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>upVec.Rotate(DollyRotation) ' apply dolly rotation to (0, 1, 0) to determine up vector</SourceLine>
   <SourceLine>upVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine>upVec.Multiply(Distance) ' calculate the distance to move</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' move the dolly position upward with the given distance</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyPosition.Add(upVec)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TruckRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TruckRight(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rightVec As new X3Core.X3Vector(1, 0, 0) ' right vector of dolly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rightVec.Rotate(DollyRotation) ' apply dolly rotation to (1, 0, 0) to determine forward vector</SourceLine>
   <SourceLine>rightVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine>rightVec.Multiply(Distance) ' calculate the distance to move</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' move the dolly position forward with the given distance</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyPosition.Add(rightVec)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TruckLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TruckLeft(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TruckRight(-distance) ' apply action with the inverse method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PanLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PanLeft(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>PanRight(-angle) ' apply action with the inverse method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PanRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PanRight(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim upVec As new X3Core.X3Vector(0, 1, 0) ' up vector of camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>upVec.Rotate(CameraRotation) ' apply camera rotation to (0, 1, 0) to determine current up vector</SourceLine>
   <SourceLine>upVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' pan the camera around the up vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CameraRotation.RotateAroundAxis(upVec, angle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TurnDollyLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TurnDollyLeft(angle As Double, Optional lockCamera As Boolean = True)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TurnDollyRight(-angle, lockCamera) ' apply action with the inverse method</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double, Optional lockCamera As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TurnDollyRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TurnDollyRight(angle As Double, Optional lockCamera As Boolean = True)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim upVec As new X3Core.X3Vector(0, 1, 0) ' up vector of dolly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>upVec.Rotate(DollyRotation) ' apply dolly rotation to (0, 1, 0) to determine current right vector</SourceLine>
   <SourceLine>upVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' turn the dolly around the up vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyRotation.RotateAroundAxis(upVec, angle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' is the camera locked to the rotation of the dolly?</SourceLine>
   <SourceLine>if lockCamera then</SourceLine>
   <SourceLine>' yes, so we need to rotate the camera as well</SourceLine>
   <SourceLine>CameraRotation.RotateAroundAxis(upVec, angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double, Optional lockCamera As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltCameraUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltCameraUp(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TiltCameraDown(-angle) ' apply action with the inverse method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltCameraDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltCameraDown(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rightVec As new X3Core.X3Vector(1, 0, 0) ' right vector of camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rightVec.Rotate(CameraRotation) ' apply camera rotation to (0, 0, 1) to determine current right vector</SourceLine>
   <SourceLine>rightVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' tilt the camera around the right vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CameraRotation.RotateAroundAxis(rightVec, angle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollCameraRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollCameraRight(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RollCameraLeft(-angle) ' apply action with the inverse method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollCameraLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollCameraLeft(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim forwardVec As new X3Core.X3Vector(0, 0, -1) ' forward vector of camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>forwardVec.Rotate(CameraRotation) ' apply camera rotation to (0,0,-1) to determine current forward vector</SourceLine>
   <SourceLine>forwardVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' roll the camera around the forward vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CameraRotation.RotateAroundAxis(forwardVec, angle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ResetCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ResetCamera()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CameraRotation.Assign(DollyRotation) ' align camera with dolly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltDollyDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltDollyDown(angle As Double, Optional lockCamera As Boolean = True)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rightVec As new X3Core.X3Vector(1, 0, 0) ' right vector of dolly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rightVec.Rotate(DollyRotation) ' apply dolly rotation to (0, 0, 1) to determine current right vector</SourceLine>
   <SourceLine>rightVec.Normalize ' normalize the forward vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' tilt the dolly around the right vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DollyRotation.RotateAroundAxis(rightVec, angle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' is the camera locked to the rotation of the dolly?</SourceLine>
   <SourceLine>if lockCamera then</SourceLine>
   <SourceLine>' yes, so we need to rotate the camera as well</SourceLine>
   <SourceLine>CameraRotation.RotateAroundAxis(rightVec, angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double, Optional lockCamera As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltDollyUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltDollyUp(angle As Double, Optional lockCamera As Boolean = True)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TiltDollyDown(-angle, lockCamera) ' apply action with the inverse method</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double, Optional lockCamera As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>DollyPosition</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DollyPosition As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DollyPosition As X3Core.X3Vector</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>CameraRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CameraRotation As X3Core.X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CameraRotation As X3Core.X3Quaternion</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>DollyRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DollyRotation As X3Core.X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DollyRotation As X3Core.X3Quaternion</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>FieldOfView</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>FieldOfView As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>FieldOfView As Double = 45.0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>zNear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>zNear As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>zNear As Double = 0.01</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>zFar</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>zFar As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>zFar As Double = 100.0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ViewportX</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ViewportX As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ViewportX As Double = 0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ViewportY</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ViewportY As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ViewportY As Double = 0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ViewportWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ViewportWidth As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ViewportWidth As Double = 0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ViewportHeight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ViewportHeight As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ViewportHeight As Double = 0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FieldOfView</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>60.0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>zNear</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>1.0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>zFar</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>100.0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ViewportX</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ViewportY</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ViewportWidth</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ViewportHeight</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="983484415">
 <ObjName>X3Vector</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Vector</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim vec as new X3Core.X3Vector(X, Y, Z)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return vec</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Vector</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initX As Double, initY As Double, initZ As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' configure vector with initial values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X = initX</SourceLine>
   <SourceLine>Y = initY</SourceLine>
   <SourceLine>Z = initZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initX As Double, initY As Double, initZ As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetMemoryBlock</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetMemoryBlock() As MemoryBlock</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim mblock As new MemoryBlock(16)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' store the vector values in the memory block</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mblock.SingleValue(0) = X</SourceLine>
   <SourceLine>mblock.SingleValue(4) = Y</SourceLine>
   <SourceLine>mblock.SingleValue(8) = Z</SourceLine>
   <SourceLine>mblock.SingleValue(12) = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mblock ' return the memory block</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>Normalize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Normalize()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim m As Double ' magnitude of vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m =  Sqrt(x^2 + y^2 + z^2) ' calculate the magnitude of the vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' now calculate normalized values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m &gt; 0 then</SourceLine>
   <SourceLine>x =  x / m</SourceLine>
   <SourceLine>y = y / m</SourceLine>
   <SourceLine>z = z / m</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Rotate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Rotate(quat As X3Core.X3Quaternion)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rotX As Double</SourceLine>
   <SourceLine>Dim rotY As Double</SourceLine>
   <SourceLine>Dim rotZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' rotate vector with quaternion values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rotX = (1 - 2 * quat.y^2 - 2 * quat.z^2) * x + 2 * (quat.x * quat.y + quat.w * quat.z) * y + 2 * (quat.x * quat.z - quat.w * quat.y) * z</SourceLine>
   <SourceLine>rotY = 2 * (quat.x * quat.y - quat.w * quat.z) * x + (1 - 2 * quat.x^2 - 2 * quat.z^2) * y + 2 * (quat.y * quat.z + quat.w * quat.x) * z</SourceLine>
   <SourceLine>rotZ = 2 * (quat.x * quat.z + quat.w * quat.y) * x + 2 * (quat.y * quat.z - quat.w * quat.x) * y + (1 - 2 * quat.x^2 - 2 * quat.y^2) * z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' assign result to current values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X = rotX</SourceLine>
   <SourceLine>Y = rotY</SourceLine>
   <SourceLine>Z = rotZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>quat As X3Core.X3Quaternion</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Multiply</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Multiply(scalar As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' multiply the vector with the given scalar value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X = X * scalar</SourceLine>
   <SourceLine>Y = Y * scalar</SourceLine>
   <SourceLine>Z = Z * scalar</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>scalar As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Add</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Add(vec As X3Core.X3Vector)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' add the given vector to this vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X = X + vec.x</SourceLine>
   <SourceLine>Y = Y + vec.y</SourceLine>
   <SourceLine>Z = Z + vec.z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>vec As X3Core.X3Vector</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DotProduct</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DotProduct(vec As X3Core.X3Vector) As Double</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = X * vec.X + Y * vec.Y + Z * vec.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>vec As X3Core.X3Vector</ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>CrossProduct</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CrossProduct(vec As X3Core.X3Vector)</SourceLine>
   <SourceLine>Dim cpX As Double</SourceLine>
   <SourceLine>Dim cpY As Double</SourceLine>
   <SourceLine>Dim cpZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' calculate cross product</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cpX = Y * vec.Z - Z * vec.Y</SourceLine>
   <SourceLine>cpY = Z * vec.X - X * vec.Z</SourceLine>
   <SourceLine>cpZ = X * vec.Y - Y * vec.X</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' assign result to values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X = cpX</SourceLine>
   <SourceLine>Y = cpY</SourceLine>
   <SourceLine>Z = cpZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>vec As X3Core.X3Vector</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PerpendicularVector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function PerpendicularVector() As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim result As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if X &lt;&gt; 0 then</SourceLine>
   <SourceLine>result = new X3Core.X3Vector(Y, -X, 0)</SourceLine>
   <SourceLine>elseif Y &lt;&gt; 0 then</SourceLine>
   <SourceLine>result = new X3Core.X3Vector(-Y, X, 0)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>result = new X3Core.X3Vector(0, -Z, Y)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Vector</ItemResult>
 </Method>
 <Property>
  <ItemName>X</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>X As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>X As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Y</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Y As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Y As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Z</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Z As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Z As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>x</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>y</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Z</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1879457791">
 <ObjName>X3Color</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Color</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim col As new X3Color.X3Color(Red, Green, Blue, Alpha)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return col</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Color</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initRed As Double, initGreen As Double, initBlue As Double, initAlpha As Double = 1)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' configure color with initial values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Red = initRed</SourceLine>
   <SourceLine>Green = initGreen</SourceLine>
   <SourceLine>Blue = initBlue</SourceLine>
   <SourceLine>Alpha = initAlpha</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initRed As Double, initGreen As Double, initBlue As Double, initAlpha As Double = 1</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetMemoryBlock</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetMemoryBlock() As MemoryBlock</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim mblock As new MemoryBlock(16)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' store the color values in the memory block</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mblock.SingleValue(0) = Red</SourceLine>
   <SourceLine>mblock.SingleValue(4) = Green</SourceLine>
   <SourceLine>mblock.SingleValue(8) = Blue</SourceLine>
   <SourceLine>mblock.SingleValue(12) = Alpha</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mblock ' return the memory block</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Property>
  <ItemName>Alpha</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Alpha As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Alpha As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Blue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Blue As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Blue As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Green</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Green As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Green As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Red</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Red As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Red As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Alpha</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Blue</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Green</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Red</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="186142719">
 <ObjName>X3Polygon</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CalculateNormal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CalculateNormal()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim v1X As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v1Y As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v1Z As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v2X As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v2Y As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v2Z As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim cpX As Double ' cross product x</SourceLine>
   <SourceLine>Dim cpY As Double ' cross product y</SourceLine>
   <SourceLine>Dim cpZ As Double ' cross product z</SourceLine>
   <SourceLine>Dim m As Double ' magnitude of vector</SourceLine>
   <SourceLine>Dim n As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' calculate polygon surface vectors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v1X = ParentModel.Vertex(VIndex(1)).X - ParentModel.Vertex(VIndex(0)).X</SourceLine>
   <SourceLine>v1Y = ParentModel.Vertex(VIndex(1)).Y - ParentModel.Vertex(VIndex(0)).Y</SourceLine>
   <SourceLine>v1Z = ParentModel.Vertex(VIndex(1)).Z - ParentModel.Vertex(VIndex(0)).Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v2X = ParentModel.Vertex(VIndex(2)).X - ParentModel.Vertex(VIndex(1)).X</SourceLine>
   <SourceLine>v2Y = ParentModel.Vertex(VIndex(2)).Y - ParentModel.Vertex(VIndex(1)).Y</SourceLine>
   <SourceLine>v2Z = ParentModel.Vertex(VIndex(2)).Z - ParentModel.Vertex(VIndex(1)).Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' calculate cross product</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cpX = v1Y * v2Z - v1Z * v2Y</SourceLine>
   <SourceLine>cpY = v1Z * v2X - v1X * v2Z</SourceLine>
   <SourceLine>cpZ = v1X * v2Y - v1Y * v2X</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m =  Sqrt(cpX^2 + cpY^2 + cpZ^2)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' now calculate normalized values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (NIndex &lt; 0) or (NIndex &gt; ParentModel.Normal.Ubound) then</SourceLine>
   <SourceLine>n = new X3Core.X3Vector(0, 0, 0)</SourceLine>
   <SourceLine>ParentModel.Normal.Append n</SourceLine>
   <SourceLine>NIndex = ParentModel.Normal.Ubound</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>n = ParentModel.Normal(NIndex)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m &gt; 0 then</SourceLine>
   <SourceLine>n.X = cpX / m</SourceLine>
   <SourceLine>n.Y = cpY / m</SourceLine>
   <SourceLine>n.Z = cpZ / m</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Polygon</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim poly As new X3Core.X3Polygon(ParentModel)</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.CIndex = CIndex</SourceLine>
   <SourceLine>poly.MIndex = MIndex</SourceLine>
   <SourceLine>poly.NIndex = NIndex</SourceLine>
   <SourceLine>poly.Selected = Selected</SourceLine>
   <SourceLine>poly.SIndex = SIndex</SourceLine>
   <SourceLine>poly.SpriteImageIndex = mSpriteImageIndex</SourceLine>
   <SourceLine>poly.TIndex = TIndex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to UVIndex.Ubound</SourceLine>
   <SourceLine>poly.UVIndex.Append UVIndex(i)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to VIndex.Ubound</SourceLine>
   <SourceLine>poly.VIndex.Append VIndex(i)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to VNIndex.Ubound</SourceLine>
   <SourceLine>poly.VNIndex.Append VNIndex(i)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return poly</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Polygon</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(parent As X3Core.X3Model)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim n As new X3Core.X3Vector(0, 0, 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ParentModel = parent</SourceLine>
   <SourceLine>ParentModel.Normal.Append n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>NIndex = ParentModel.Normal.Ubound</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>parent As X3Core.X3Model</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(parent As X3Core.X3Model, normalX As Double, normalY As Double, normalZ As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim n As new X3Core.X3Vector(normalX, normalY, normalZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ParentModel = parent</SourceLine>
   <SourceLine>ParentModel.Normal.Append n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>NIndex = ParentModel.Normal.Ubound</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>parent As X3Core.X3Model, normalX As Double, normalY As Double, normalZ As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetCenter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetCenter() As X3Core.X3Vector</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim xTot As Double</SourceLine>
   <SourceLine>Dim yTot As Double</SourceLine>
   <SourceLine>Dim zTot As Double</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim totVerts As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>xTot = 0</SourceLine>
   <SourceLine>yTot = 0</SourceLine>
   <SourceLine>zTot = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to VIndex.Ubound</SourceLine>
   <SourceLine>xTot = xTot + ParentModel.Vertex(VIndex(i)).X</SourceLine>
   <SourceLine>yTot = yTot + ParentModel.Vertex(VIndex(i)).Y</SourceLine>
   <SourceLine>zTot = zTot + ParentModel.Vertex(VIndex(i)).Z</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>totVerts = VIndex.Ubound + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return new X3Core.X3Vector(xTot / totVerts, yTot / totVerts, zTot / totVerts)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Vector</ItemResult>
 </Method>
 <Method>
  <ItemName>NextSpriteImage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub NextSpriteImage()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim s As X3Core.X3Sprite</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>s = ParentModel.Sprite(SIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SpriteImageIndex = SpriteImageIndex + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SpriteImageIndex &gt; s.SpriteMap.Ubound then</SourceLine>
   <SourceLine>SpriteImageIndex = 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Triangulate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Triangulate()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim foundEar As Boolean</SourceLine>
   <SourceLine>Dim poly As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim coords2D() As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim convexArea As Double</SourceLine>
   <SourceLine>Dim iMinusOne As Integer</SourceLine>
   <SourceLine>Dim iPlusOne As Integer</SourceLine>
   <SourceLine>Dim vertexInside As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim v0 As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim v1 As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim v2 As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim dot00 As Double</SourceLine>
   <SourceLine>Dim dot01 As Double</SourceLine>
   <SourceLine>Dim dot02 As Double</SourceLine>
   <SourceLine>Dim dot11 As Double</SourceLine>
   <SourceLine>Dim dot12 As Double</SourceLine>
   <SourceLine>Dim invDenom As Double</SourceLine>
   <SourceLine>Dim u As Double</SourceLine>
   <SourceLine>Dim v As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// reduce project 3D poloygon to a 2D polygon to simplify calculations</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if VIndex.Ubound &gt; 2 then</SourceLine>
   <SourceLine>coords2D = GetXYProjectionCoords()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// triangulate the polygon using the ear clipping method</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while VIndex.Ubound &gt; 2 </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// find the next ear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>foundEar = false</SourceLine>
   <SourceLine>while not foundEar</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// determine index values of vertices</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if i &lt;= 0 then</SourceLine>
   <SourceLine>iMinusOne = VIndex.Ubound</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>iMinusOne = i - 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if i &gt;= VIndex.Ubound then</SourceLine>
   <SourceLine>iPlusOne = 0</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>iPlusOne = i + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>convexArea = coords2D(iMinusOne).X * (coords2D(iPlusOne).Y - coords2D(i).Y)</SourceLine>
   <SourceLine>convexArea = convexArea + coords2D(i).X * (coords2D(iMinusOne).Y - coords2D(iPlusOne).Y)</SourceLine>
   <SourceLine>convexArea = convexArea + coords2D(iPlusOne).X * (coords2D(i).Y - coords2D(iMinusOne).Y)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// is p(i) convex?</SourceLine>
   <SourceLine>if convexArea &lt; 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' yes, now see if the triangle formed by pi-1, pi, and pi+1 contain no concave vertices</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' if the vertex is only four vertices in size, the fourth point wont be inside the ear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>vertexInside = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine> if VIndex.Ubound &gt; 3 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// compute vectors for test</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v0 = new X3Vector(coords2D(iPlusOne).X - coords2D(iMinusOne).X, coords2D(iPlusOne).Y - coords2D(iMinusOne).Y, 0)</SourceLine>
   <SourceLine>v1 = new X3Vector(coords2D(i).X - coords2D(iMinusOne).X, coords2D(i).Y - coords2D(iMinusOne).Y, 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>j = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (j &lt;= VIndex.Ubound) and not vertexInside</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (j &lt;&gt; iMinusOne) and (j &lt;&gt; i) and (j &lt;&gt; iPlusOne) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// see if this point is inside the triangle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v2 = new X3Vector(coords2D(j).X - coords2D(iMinusOne).X, coords2D(j).Y - coords2D(iMinusOne).Y, 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Compute dot products</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dot00 =  v0.DotProduct(v0)</SourceLine>
   <SourceLine>dot01 = v0.DotProduct(v1)</SourceLine>
   <SourceLine>dot02 = v0.DotProduct(v2)</SourceLine>
   <SourceLine>dot11 = v1.DotProduct(v1)</SourceLine>
   <SourceLine>dot12 = v1.DotProduct(v2)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Compute barycentric coordinates</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>invDenom = 1 / (dot00 * dot11 - dot01 * dot01)</SourceLine>
   <SourceLine>u = (dot11 * dot02 - dot01 * dot12) * invDenom</SourceLine>
   <SourceLine>v = (dot00 * dot12 - dot01 * dot02) * invDenom</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Check if point is in triangle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>vertexInside = ((u &gt;= 0) and (v &gt;= 0) and ((u + v) &lt; 1))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// todo: see if vertex is concave</SourceLine>
   <SourceLine>// note: not sure if this is required?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>j = j + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not vertexInside then</SourceLine>
   <SourceLine>' yes, so we found an ear</SourceLine>
   <SourceLine>foundEar = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not foundEar then</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// create the ear polygon from p(i-1), p(i) and p(i+1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = new X3Core.X3Polygon()</SourceLine>
   <SourceLine>poly.ParentModel = ParentModel</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// vertex 1 : p(i - 1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VIndex.Append VIndex(iMinusOne)</SourceLine>
   <SourceLine>if poly.TIndex &gt;= 0 then</SourceLine>
   <SourceLine>poly.UVIndex.Append UVIndex(iMinusOne)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if poly.VNIndex.Ubound &gt;= poly.VIndex.Ubound then</SourceLine>
   <SourceLine>poly.VNIndex.Append VNIndex(iMinusOne)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// vertex 2 : p(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VIndex.Append VIndex(i)</SourceLine>
   <SourceLine>if TIndex &gt;= 0 then</SourceLine>
   <SourceLine>poly.UVIndex.Append UVIndex(i)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if VNIndex.Ubound &gt;= VIndex.Ubound then</SourceLine>
   <SourceLine>poly.VNIndex.Append VNIndex(i)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// vertex 3 : p(i + 1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VIndex.Append VIndex(iPlusOne)</SourceLine>
   <SourceLine>if TIndex &gt;= 0 then</SourceLine>
   <SourceLine>poly.UVIndex.Append UVIndex(iPlusOne)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if VNIndex.Ubound &gt;= VIndex.Ubound then</SourceLine>
   <SourceLine>poly.VNIndex.Append VNIndex(iPlusOne)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// configure the visual properties of the ear polygon </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.CIndex = CIndex</SourceLine>
   <SourceLine>poly.MIndex = MIndex</SourceLine>
   <SourceLine>poly.NIndex = NIndex</SourceLine>
   <SourceLine>poly.SIndex = SIndex</SourceLine>
   <SourceLine>poly.SpriteImageIndex = SpriteImageIndex</SourceLine>
   <SourceLine>poly.TIndex = TIndex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ParentModel.Polygon.Append poly // add the new polygon to the model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// remove principle vertex from this polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if VNIndex.Ubound &gt;= VIndex.Ubound then</SourceLine>
   <SourceLine>VNIndex.Remove(i)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>VIndex.Remove(i)</SourceLine>
   <SourceLine>if poly.TIndex &gt;= 0 then</SourceLine>
   <SourceLine>UVIndex.Remove(i)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>coords2D.Remove(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CalculateNormal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CalculateNormal() As X3Core.X3Vector</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim v1X As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v1Y As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v1Z As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v2X As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v2Y As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim v2Z As Double ' temporary value used during calculations</SourceLine>
   <SourceLine>Dim cpX As Double ' cross product x</SourceLine>
   <SourceLine>Dim cpY As Double ' cross product y</SourceLine>
   <SourceLine>Dim cpZ As Double ' cross product z</SourceLine>
   <SourceLine>Dim m As Double ' magnitude of vector</SourceLine>
   <SourceLine>Dim n As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' calculate polygon surface vectors</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v1X = ParentModel.Vertex(VIndex(1)).X - ParentModel.Vertex(VIndex(0)).X</SourceLine>
   <SourceLine>v1Y = ParentModel.Vertex(VIndex(1)).Y - ParentModel.Vertex(VIndex(0)).Y</SourceLine>
   <SourceLine>v1Z = ParentModel.Vertex(VIndex(1)).Z - ParentModel.Vertex(VIndex(0)).Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v2X = ParentModel.Vertex(VIndex(2)).X - ParentModel.Vertex(VIndex(1)).X</SourceLine>
   <SourceLine>v2Y = ParentModel.Vertex(VIndex(2)).Y - ParentModel.Vertex(VIndex(1)).Y</SourceLine>
   <SourceLine>v2Z = ParentModel.Vertex(VIndex(2)).Z - ParentModel.Vertex(VIndex(1)).Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' calculate cross product</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cpX = v1Y * v2Z - v1Z * v2Y</SourceLine>
   <SourceLine>cpY = v1Z * v2X - v1X * v2Z</SourceLine>
   <SourceLine>cpZ = v1X * v2Y - v1Y * v2X</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m =  Sqrt(cpX^2 + cpY^2 + cpZ^2)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' now calculate normalized values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = new X3Core.X3Vector(0, 0, 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m &gt; 0 then</SourceLine>
   <SourceLine>n.X = cpX / m</SourceLine>
   <SourceLine>n.Y = cpY / m</SourceLine>
   <SourceLine>n.Z = cpZ / m</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Vector</ItemResult>
 </Method>
 <Method>
  <ItemName>GetXYProjectionCoords</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetXYProjectionCoords() As X3Core.X3Vector()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim coords() As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim polyNorm As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim xyNorm As new X3Core.X3Vector(0, 0, 1)</SourceLine>
   <SourceLine>Dim angle As Double</SourceLine>
   <SourceLine>Dim quat As X3Core.X3Quaternion</SourceLine>
   <SourceLine>Dim tmpVec As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>polyNorm = CalculateNormal()</SourceLine>
   <SourceLine>angle = ACos(polyNorm.DotProduct(xyNorm)) * X3_180OverPi</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if angle = 0 then ' polygon is facing us, so use XY coordinates as is?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt;= VIndex.Ubound</SourceLine>
   <SourceLine>coords.Append new X3Core.X3Vector(ParentModel.Vertex(VIndex(i)).X, ParentModel.Vertex(VIndex(i)).Y, 0)</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// polygon needs to be rotated to face us before its projected onto XY plane</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if angle = 180 then</SourceLine>
   <SourceLine>tmpVec = polyNorm.PerpendicularVector()</SourceLine>
   <SourceLine>quat = new X3Core.X3Quaternion(tmpVec, 180) // generate a quaternion to use for vertex rotations</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>quat = new X3Core.X3Quaternion(polyNorm, xyNorm) // calculate quaternion to use for vertex rotations</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt;= VIndex.Ubound</SourceLine>
   <SourceLine>tmpVec = ParentModel.Vertex(VIndex(i)).Clone</SourceLine>
   <SourceLine>tmpVec.Rotate quat</SourceLine>
   <SourceLine>coords.Append new X3Core.X3Vector(tmpVec.X, tmpVec.Y, 0)</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return coords</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Vector()</ItemResult>
 </Method>
 <Property>
  <ItemName>CIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CIndex As Integer = -1</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MIndex As Integer = -1</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mParentModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mParentModel As WeakRef</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mParentModel As WeakRef</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mSpriteImageIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mSpriteImageIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mSpriteImageIndex As Integer = -1</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>NIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>NIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>NIndex As Integer = -1</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ParentModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ParentModel As X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ParentModel As X3Core.X3Model</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mParentModel = New WeakRef(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return X3Model(mParentModel.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Selected</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Selected As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Selected As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SIndex As Integer = -1</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SpriteImageCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SpriteImageCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SpriteImageCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Dim cnt As Integer</SourceLine>
   <SourceLine>Dim s As X3Core.X3Sprite</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cnt = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SIndex &gt;= 0 then</SourceLine>
   <SourceLine>s = ParentModel.Sprite(SIndex)</SourceLine>
   <SourceLine>cnt = s.SpriteMap.Ubound + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return cnt</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>SpriteImageIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SpriteImageIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SpriteImageIndex As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Dim model As X3Core.X3Model</SourceLine>
   <SourceLine>Dim s As X3Core.X3Sprite</SourceLine>
   <SourceLine>Dim uvc As X3Core.X3UVCoordinate</SourceLine>
   <SourceLine>Dim sc As X3Core.X3SpriteCoordinate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model = ParentModel</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>s = model.Sprite(SIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mSpriteImageIndex = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (mSpriteImageIndex &lt;= s.SpriteMap.Ubound) and (mSpriteImageIndex &gt;= 0) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sc = s.SpriteMap(mSpriteImageIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>uvc = model.UVMap(UVIndex(0))</SourceLine>
   <SourceLine>uvc.U = sc.U1</SourceLine>
   <SourceLine>uvc.V = sc.V1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>uvc = model.UVMap(UVIndex(1))</SourceLine>
   <SourceLine>uvc.U = sc.U1</SourceLine>
   <SourceLine>uvc.V = sc.V2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>uvc = model.UVMap(UVIndex(2))</SourceLine>
   <SourceLine>uvc.U = sc.U2</SourceLine>
   <SourceLine>uvc.V = sc.V2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>uvc = model.UVMap(UVIndex(3))</SourceLine>
   <SourceLine>uvc.U = sc.U2</SourceLine>
   <SourceLine>uvc.V = sc.V1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mSpriteImageIndex</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>TIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>TIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>TIndex As Integer = -1</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>UVIndex()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>UVIndex() As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>UVIndex() As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>VIndex()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>VIndex() As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>VIndex() As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>VNIndex()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>VNIndex() As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>VNIndex() As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>CIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>NIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Selected</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SpriteImageCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SpriteImageIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1049808895">
 <ObjName>X3Light</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(xPos As Double, yPos As Double, zPos As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Position = new X3Vector(xPos, yPos, zPos) ' initialize the position of the light with the given values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' intialize the light properties with default values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Ambient = new X3Color(0.2, 0.2, 0.2, 1)</SourceLine>
   <SourceLine>Diffuse = new X3Color(1, 1, 1, 1)</SourceLine>
   <SourceLine>Specular = new X3Color(1, 1, 1, 1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>xPos As Double, yPos As Double, zPos As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' intialize the light properties with default values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Position = new X3Vector(0, 0, 0) ' initialize the light at the origin</SourceLine>
   <SourceLine>Ambient = new X3Color(0.2, 0.2, 0.2, 1)</SourceLine>
   <SourceLine>Diffuse = new X3Color(1, 1, 1, 1)</SourceLine>
   <SourceLine>Specular = new X3Color(1, 1, 1, 1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Ambient</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Ambient As X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Ambient As X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Diffuse</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Diffuse As X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Diffuse As X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Position</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Position As X3Vector</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Position As X3Vector</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Specular</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Specular As X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Specular As X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1220685823">
 <ObjName>X3Model</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AppendPolygon</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AppendPolygon(poly As X3Core.X3Polygon)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim firstUVIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.ParentModel = me</SourceLine>
   <SourceLine>Polygon.Append poly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' if this is a sprite polygon, and the UV coordinates is not defined?</SourceLine>
   <SourceLine>if (poly.SIndex &gt;= 0) and (poly.UVIndex &lt;&gt; poly.VIndex) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' yes, so let's add the UV coordinates for the sprite now</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Redim poly.UVIndex(-1)</SourceLine>
   <SourceLine>firstUVIndex = UVMap.Ubound + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>UVMap.Append new X3Core.X3UVCoordinate(0, 0)</SourceLine>
   <SourceLine>poly.UVIndex.Append (firstUVIndex + i)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>poly As X3Core.X3Polygon</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Model</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As new X3Core.X3Model</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim poly As X3Core.X3Polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to ColorPal.Ubound</SourceLine>
   <SourceLine>model.ColorPal.Append ColorPal(i).Clone</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Invalidate = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Material.Ubound</SourceLine>
   <SourceLine>model.Material.Append Material(i).Clone</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Normal.Ubound</SourceLine>
   <SourceLine>model.Normal.Append Normal(i).Clone</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Polygon.Ubound</SourceLine>
   <SourceLine>poly = Polygon(i).Clone</SourceLine>
   <SourceLine>poly.ParentModel = model</SourceLine>
   <SourceLine>model.Polygon.Append poly</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Position = Position.Clone</SourceLine>
   <SourceLine>model.Rotation = Rotation.Clone</SourceLine>
   <SourceLine>model.Scale = Scale.Clone</SourceLine>
   <SourceLine>if BoundingBox &lt;&gt; nil then</SourceLine>
   <SourceLine>model.BoundingBox = BoundingBox.Clone</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Sprite.Ubound</SourceLine>
   <SourceLine>model.Sprite.Append Sprite(i).Clone</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Vertex.Ubound</SourceLine>
   <SourceLine>model.Vertex.Append Vertex(i).Clone</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to UVMap.Ubound</SourceLine>
   <SourceLine>model.UVMap.Append UVMap(i).Clone</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Texture.Ubound</SourceLine>
   <SourceLine>model.Texture.Append Texture(i) ' textures cannot be cloned because it is linked to a bitmap in OpenGL memory</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Position = new X3Core.X3Vector(0, 0, 0) ' instantiate the default position at the origin</SourceLine>
   <SourceLine>Rotation = new X3Core.X3Quaternion() ' instantiate a default rotation quaternion</SourceLine>
   <SourceLine>Scale = new X3Core.X3Vector(1, 1, 1) ' instantiate the default scale</SourceLine>
   <SourceLine>BoundingBox = new X3Core.X3BoundingBox() ' instantiate the bounding box object of the model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>NextSpriteImage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub NextSpriteImage()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Polygon.Ubound</SourceLine>
   <SourceLine>Polygon(i).NextSpriteImage()</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Center</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Center(pos As X3Core.X3Vector = nil)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim centPos As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim maxX As Double</SourceLine>
   <SourceLine>Dim minX As Double</SourceLine>
   <SourceLine>Dim maxY As Double</SourceLine>
   <SourceLine>Dim minY As Double</SourceLine>
   <SourceLine>Dim maxZ As Double</SourceLine>
   <SourceLine>Dim minZ As Double</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Vertex.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>maxX = Vertex(0).X</SourceLine>
   <SourceLine>minX = Vertex(0).X</SourceLine>
   <SourceLine>maxY = Vertex(0).Y</SourceLine>
   <SourceLine>minY = Vertex(0).Y</SourceLine>
   <SourceLine>maxZ = Vertex(0).Z</SourceLine>
   <SourceLine>minZ = Vertex(0).Z</SourceLine>
   <SourceLine>for i = 1 to Vertex.Ubound</SourceLine>
   <SourceLine>if Vertex(i).X &gt; maxX then</SourceLine>
   <SourceLine>maxX = Vertex(i).X</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if Vertex(i).X &lt; minX then</SourceLine>
   <SourceLine>minX = Vertex(i).X</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if Vertex(i).Y &gt; maxY then</SourceLine>
   <SourceLine>maxY = Vertex(i).Y</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if Vertex(i).Y &lt; minY then</SourceLine>
   <SourceLine>minY = Vertex(i).Y</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if Vertex(i).Z &gt; maxZ then</SourceLine>
   <SourceLine>maxZ = Vertex(i).Z</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if Vertex(i).Z &lt; minZ then</SourceLine>
   <SourceLine>minZ = Vertex(i).Z</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pos = nil then</SourceLine>
   <SourceLine>centPos = new X3Core.X3Vector(0, 0, 0)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>centPos = pos</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>MaxX = centPos.X - (MaxX + MinX) / 2</SourceLine>
   <SourceLine>MaxY = centPos.Y - (MaxY + MinY) / 2</SourceLine>
   <SourceLine>MaxZ = centPos.Z - (MaxZ + MinZ) / 2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Vertex.Ubound</SourceLine>
   <SourceLine>Vertex(i).X = Vertex(i).X + MaxX</SourceLine>
   <SourceLine>Vertex(i).Y = Vertex(i).Y + MaxY</SourceLine>
   <SourceLine>Vertex(i).Z = Vertex(i).Z + MaxZ</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>pos As X3Core.X3Vector = nil</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Unitize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Unitize(pos As X3Core.X3Vector = nil)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim centPos As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim midX As Double</SourceLine>
   <SourceLine>Dim midY As Double</SourceLine>
   <SourceLine>Dim midZ As Double</SourceLine>
   <SourceLine>Dim vertLen As Double</SourceLine>
   <SourceLine>Dim maxLen As Double</SourceLine>
   <SourceLine>Dim scale As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pos = nil then</SourceLine>
   <SourceLine>centPos = new X3Core.X3Vector(0, 0, 0)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>centPos = pos</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>midX = 0</SourceLine>
   <SourceLine>midY = 0</SourceLine>
   <SourceLine>midZ = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Vertex.Ubound</SourceLine>
   <SourceLine>midX = midX + Vertex(i).X</SourceLine>
   <SourceLine>midY = midY + Vertex(i).Y</SourceLine>
   <SourceLine>midZ = midZ + Vertex(i).Z</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>midX = midX / (Vertex.Ubound + 1)</SourceLine>
   <SourceLine>midY = midY / (Vertex.Ubound + 1)</SourceLine>
   <SourceLine>midZ = midZ / (Vertex.Ubound + 1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>maxLen = 0</SourceLine>
   <SourceLine>for i = 0 to Vertex.Ubound</SourceLine>
   <SourceLine>vertLen = Sqrt((Vertex(i).X - midX)^2 + (Vertex(i).Y - midY)^2 + (Vertex(i).Z - midZ)^2)</SourceLine>
   <SourceLine>if vertLen &gt; maxLen then</SourceLine>
   <SourceLine>maxLen = vertLen</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' scale model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>scale = 1 / maxLen</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Vertex.Ubound</SourceLine>
   <SourceLine>Vertex(i).X = Vertex(i).X / maxLen</SourceLine>
   <SourceLine>Vertex(i).Y = Vertex(i).Y / maxLen</SourceLine>
   <SourceLine>Vertex(i).Z = Vertex(i).Z / maxLen</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>pos As X3Core.X3Vector = nil</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateBoundingBox</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateBoundingBox()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative. </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Vertex.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>BoundingBox.ApplyVertex Vertex(0)</SourceLine>
   <SourceLine>for i = 1 to Vertex.Ubound</SourceLine>
   <SourceLine>BoundingBox.ApplyVertex Vertex(i)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>BoundingBox.X1 = 0</SourceLine>
   <SourceLine>BoundingBox.Y1 = 0</SourceLine>
   <SourceLine>BoundingBox.Z1 = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>BoundingBox.X2 = 0</SourceLine>
   <SourceLine>BoundingBox.Y2 = 0</SourceLine>
   <SourceLine>BoundingBox.Z2 = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Triangulate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Triangulate()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt;= Polygon.Ubound</SourceLine>
   <SourceLine>Polygon(i).Triangulate()</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>ColorPal()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ColorPal() As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ColorPal() As X3Core.X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Invalidate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Invalidate As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Invalidate As Boolean = False</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Material()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Material() As X3Core.X3Material</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Material() As X3Core.X3Material</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Normal()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Normal() As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Normal() As X3Core.X3Vector</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>OGLName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>OGLName As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>OGLName As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Polygon()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Polygon() As X3Polygon</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Polygon() As X3Polygon</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Rotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Rotation As X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Rotation As X3Quaternion</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Sprite()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sprite() As X3Core.X3Sprite</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Sprite() As X3Core.X3Sprite</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SpritePolygons()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SpritePolygons() As X3Core.X3Polygon</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SpritePolygons() As X3Core.X3Polygon</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Texture()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Texture() As X3Core.X3Texture</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Texture() As X3Core.X3Texture</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>UVMap()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>UVMap() As X3Core.X3UVCoordinate</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>UVMap() As X3Core.X3UVCoordinate</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Vertex()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Vertex() As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Vertex() As X3Core.X3Vector</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Position</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Position As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Position As X3Core.X3Vector</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Scale</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Scale As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Scale As X3Core.X3Vector</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>BoundingBox</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>BoundingBox As X3Core.X3BoundingBox</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>BoundingBox As X3Core.X3BoundingBox</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Invalidate</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>OGLName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1917810687">
 <ObjName>X3Texture</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(texture As Picture)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim x As Integer</SourceLine>
   <SourceLine>Dim y As Integer</SourceLine>
   <SourceLine>Dim offset As Integer</SourceLine>
   <SourceLine>Dim textCol As Color</SourceLine>
   <SourceLine>Dim textMaskCol As Color</SourceLine>
   <SourceLine>Dim w As Integer</SourceLine>
   <SourceLine>Dim h As Integer</SourceLine>
   <SourceLine>Dim rgbMain As RGBSurface</SourceLine>
   <SourceLine>Dim rgbMask As RGBSurface</SourceLine>
   <SourceLine>Dim RGBABitmapPtr As Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Transparent = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' convert pictures to raw formats</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Width = texture.Width</SourceLine>
   <SourceLine>Height = texture.Height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RGBABitmap = new MemoryBlock(Height * Width * 4) ' create a MemoryBlock for the OpenGL RGBA format</SourceLine>
   <SourceLine>RGBABitmapPtr = RGBABitmap</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' loop through all the pixels of the picture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>offset = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>h = Height - 1</SourceLine>
   <SourceLine>w = Width - 1</SourceLine>
   <SourceLine>rgbMain = texture.RGBSurface</SourceLine>
   <SourceLine>rgbMask = texture.Mask.RGBSurface</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for y = 0 to h</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for x = 0 to w</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' read the values of the current pixel</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>textCol = rgbMain.Pixel(x,y) ' get the color of the current pixel</SourceLine>
   <SourceLine>textMaskCol = rgbMask.Pixel(x, y) ' get the mask (alpha) color of the current pixel</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' store the color and alpha values into our OpenGL texture bitmap</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RGBABitmapPtr.Byte(offset) = textCol.Red</SourceLine>
   <SourceLine>RGBABitmapPtr.Byte(offset + 1) = textCol.Green</SourceLine>
   <SourceLine>RGBABitmapPtr.Byte(offset + 2) = textCol.Blue</SourceLine>
   <SourceLine>RGBABitmapPtr.Byte(offset + 3) = 255 - textMaskCol.Red</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if RGBABitmapPtr.Byte(offset + 3) &lt; 255 then</SourceLine>
   <SourceLine>Transparent = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>offset = offset + 4 ' move to the next pixel in our OpenGL texture bitmap</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next x</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next y</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TextureImage = texture</SourceLine>
   <SourceLine>OGLName = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>texture As Picture</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim texturePtr As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glFlush ' empty the OpenGL buffers</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' store the OpenGL named assigned to the texture in a MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>texturePtr = new MemoryBlock(4)</SourceLine>
   <SourceLine>texturePtr.Long(0) = OGLName</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OpenGL.glDeleteTextures(1, texturePtr) ' instruct OpenGL to remove texture from memory</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Height</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Height As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Height As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>OGLName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>OGLName As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>OGLName As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>RGBABitmap</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>RGBABitmap As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>RGBABitmap As MemoryBlock</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Transparent</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Transparent As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Transparent As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Width</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Width As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Width As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>TextureImage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>TextureImage As Picture</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>TextureImage As Picture</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>OGLName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Transparent</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextureImage</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Picture</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="689678335">
 <ObjName>X3UVCoordinate</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3UVCoordinate</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim coord As new X3UVCoordinate(U, V)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return coord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3UVCoordinate</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initU As Double, initV As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' configure coordinate with initial values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>U = initU</SourceLine>
   <SourceLine>V = initV</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initU As Double, initV As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>U</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>U As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>U As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>V</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>V As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>V As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>U</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>V</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1906044927">
 <ObjName>X3Quaternion</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Quaternion</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim quat As new X3Core.X3Quaternion(W, X, Y, Z)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return quat</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Quaternion</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' initialize quaternion with a zero rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>w = 1</SourceLine>
   <SourceLine>x = 0</SourceLine>
   <SourceLine>y = 0</SourceLine>
   <SourceLine>z = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initW As Double, initX As Double, initY As Double, initZ As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' configure quaternion with initial values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>W = initW</SourceLine>
   <SourceLine>X = initX</SourceLine>
   <SourceLine>Y = initY</SourceLine>
   <SourceLine>Z = initZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initW As Double, initX As Double, initY As Double, initZ As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FromEulerRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub FromEulerRotation(x As Double, y As Double, z As Double, angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' IMPORTANT: vector needs to be normalized prior to this call</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim halfAngle As Double</SourceLine>
   <SourceLine>Dim sinAng As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>halfAngle = (angle * X3_PiOver180)  / 2 ' calculate the half angle (convert radians to degrees)</SourceLine>
   <SourceLine>sinAng = sin(halfAngle) ' calculate sine of half angle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.X = (x * sinAng)</SourceLine>
   <SourceLine>Me.Y = (y * sinAng)</SourceLine>
   <SourceLine>Me.Z = (z * sinAng)</SourceLine>
   <SourceLine>Me.W = cos(halfAngle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Normalize()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>x As Double, y As Double, z As Double, angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Multiply</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Multiply(q As X3Quaternion)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim resultX As Double</SourceLine>
   <SourceLine>Dim resultY As Double</SourceLine>
   <SourceLine>Dim resultZ As Double</SourceLine>
   <SourceLine>Dim resultW As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' multiply this quaternion with the given quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>resultW = (w * q.w) - (x * q.x) - (y * q.y) - (z * q.z)</SourceLine>
   <SourceLine>resultX = (w * q.x) + (x * q.w) + (y * q.z) - (z * q.y)</SourceLine>
   <SourceLine>resultY = (w * q.y) - (x * q.z) +(y * q.w) + (z * q.x)</SourceLine>
   <SourceLine>resultZ = (w * q.z) +(x * q.y) - (y * q.x) +(z * q.w)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' store the results in this quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>x = resultX</SourceLine>
   <SourceLine>y = resultY</SourceLine>
   <SourceLine>z = resultZ</SourceLine>
   <SourceLine>w = resultW</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>q As X3Quaternion</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Normalize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Normalize()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim m As Double ' magnitude of quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m = Sqrt(x^2 + y^2 + z^2 + w^2) ' calculate magnitude of quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' calculate normalized values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m &gt; 0 then</SourceLine>
   <SourceLine>w = w / m</SourceLine>
   <SourceLine>x = x / m</SourceLine>
   <SourceLine>y = y / m</SourceLine>
   <SourceLine>z = z / m</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Pitch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Pitch(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim tmpQuat As new X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Formula: [new quaternion] = [self] x [pitch quaternion]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tmpQuat.FromEulerRotation(1, 0, 0, angle)</SourceLine>
   <SourceLine>Multiply tmpQuat</SourceLine>
   <SourceLine>Normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Roll</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Roll(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim tmpQuat As new X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Formula: [new quaternion] = [self] x [roll quaternion]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tmpQuat.FromEulerRotation(0, 0, 1, angle)</SourceLine>
   <SourceLine>Multiply tmpQuat</SourceLine>
   <SourceLine>Normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Yaw</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Yaw(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim tmpQuat As new X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Formula: [new quaternion] = [self] x [yaw quaternion]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tmpQuat.FromEulerRotation(0, 1, 0, angle)</SourceLine>
   <SourceLine>Multiply tmpQuat</SourceLine>
   <SourceLine>Normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RotateAroundAxis</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RotateAroundAxis(axis As X3Core.X3Vector, angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim tmpQuat As new X3Core.X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Formula: [new quaternion] = [self] x [rotation]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' apply rotation around axis</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if angle &lt;&gt; 0 then</SourceLine>
   <SourceLine>tmpQuat.FromEulerRotation(axis, angle)</SourceLine>
   <SourceLine>Multiply tmpQuat</SourceLine>
   <SourceLine>Normalize</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>axis As X3Core.X3Vector, angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Assign</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Assign(quat As X3Core.X3Quaternion)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' assign given quaternion value to self</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>W = quat.W</SourceLine>
   <SourceLine>X = quat.X</SourceLine>
   <SourceLine>Y = quat.Y</SourceLine>
   <SourceLine>Z = quat.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>quat As X3Core.X3Quaternion</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(fromVec As X3Core.X3Vector, toVec As X3Core.X3Vector)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim tmpFrom As X3Core.X3Vector ' temporary vector used in calculations</SourceLine>
   <SourceLine>Dim tmpTo As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim axis As X3Core.X3Vector ' axis of rotation</SourceLine>
   <SourceLine>Dim angle As Double ' angle of rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tmpFrom = fromVec.Clone()</SourceLine>
   <SourceLine>tmpFrom.Normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tmpTo = toVec.Clone()</SourceLine>
   <SourceLine>tmpTo.Normalize</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>axis = tmpTo.Clone()</SourceLine>
   <SourceLine>axis.CrossProduct(tmpFrom) ' calculate the quaternion axis</SourceLine>
   <SourceLine>axis.Normalize ' normalize the axis</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>angle = ACos(tmpFrom.DotProduct(tmpTo)) * X3_180OverPi ' quaternion angle of roration in degrees</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>FromEulerRotation(axis, angle) ' instantiate the quaterion with the calculate axis and angle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Normalize ' normalize the quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>fromVec As X3Core.X3Vector, toVec As X3Core.X3Vector</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FromEulerRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub FromEulerRotation(axis As X3Core.X3Vector, angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' IMPORTANT: axis needs to be normalized prior to this call</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>FromEulerRotation axis.X, axis.Y, axis.Z, angle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>axis As X3Core.X3Vector, angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(axis As X3Core.X3Vector, angle As Double)</SourceLine>
   <SourceLine>FromEulerRotation axis, angle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>axis As X3Core.X3Vector, angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>W</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>W As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>W As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>X</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>X As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>X As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Y</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Y As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Y As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Z</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Z As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Z As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>w</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>x</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>y</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>z</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1156386815">
 <ObjName>X3Scene</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>DollyIn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DollyIn(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.DollyIn(distance)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DollyOut</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DollyOut(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.DollyOut(distance)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PedestalUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PedestalUp(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.PedestalUp(distance)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PedestalDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PedestalDown(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.PedestalDown(distance)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TruckLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TruckLeft(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TruckLeft(distance)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TruckRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TruckRight(distance As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TruckRight(distance)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>distance As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PanLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PanLeft(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.PanLeft(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PanRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PanRight(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.PanRight(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TurnDollyLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TurnDollyLeft(angle As Double, Optional lockCamera As Boolean = True)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TurnDollyLeft(angle, lockCamera)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double, Optional lockCamera As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TurnDollyRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TurnDollyRight(angle As Double, Optional lockCamera As Boolean = True)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TurnDollyRight(angle, lockCamera)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double, Optional lockCamera As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltCameraUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltCameraUp(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TiltCameraUp(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltCameraDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltCameraDown(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TiltCameraDown(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollCameraRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollCameraRight(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.RollCameraRight(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollCameraLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollCameraLeft(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.RollCameraLeft(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ResetCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ResetCamera()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.ResetCamera()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SetViewport</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetViewport(x As Double, y As Double, width As Double, height As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' loop through all cameras and configure them with the given viewport settings</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Camera.Ubound</SourceLine>
   <SourceLine>Camera(i).ViewportX = x</SourceLine>
   <SourceLine>Camera(i).ViewportY = y</SourceLine>
   <SourceLine>Camera(i).ViewportWidth = width</SourceLine>
   <SourceLine>Camera(i).ViewportHeight = height</SourceLine>
   <SourceLine>next i </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>x As Double, y As Double, width As Double, height As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltDollyDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltDollyDown(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TiltDollyDown(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TiltDollyUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TiltDollyUp(angle As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mActiveCamera &lt;&gt; nil then</SourceLine>
   <SourceLine>mActiveCamera.TiltDollyUp(angle)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Model()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Model() As X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Model() As X3Core.X3Model</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Camera()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Camera() As X3Core.X3Camera</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Camera() As X3Core.X3Camera</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCameraIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCameraIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCameraIndex As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>CameraIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CameraIndex As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CameraIndex As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mCameraIndex = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mCameraIndex &gt;= 0 and mCameraIndex &lt;= Camera.Ubound then</SourceLine>
   <SourceLine>mActiveCamera = Camera(mCameraIndex)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mActiveCamera = nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mCameraIndex</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mActiveCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mActiveCamera As X3Core.X3Camera</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mActiveCamera As X3Core.X3Camera</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ActiveCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ActiveCamera As X3Core.X3Camera</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ActiveCamera As X3Core.X3Camera</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mActiveCamera</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Light()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Light() As X3Core.X3Light</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Light() As X3Core.X3Light</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CameraIndex</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="842684415">
 <ObjName>X3Material</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Material</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim mat As new X3Core.X3Material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mat.Ambient = Ambient.Clone</SourceLine>
   <SourceLine>mat.Diffuse = Diffuse.Clone</SourceLine>
   <SourceLine>mat.Shininess = Shininess</SourceLine>
   <SourceLine>mat.Specular = Specular.Clone</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mat</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Material</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Ambient = new X3Color(0.2, 0.2, 0.2)</SourceLine>
   <SourceLine>Diffuse = new X3Color(0.8, 0.8, 0.8)</SourceLine>
   <SourceLine>Specular = new X3Color(0, 0, 0)</SourceLine>
   <SourceLine>Shininess = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Ambient</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Ambient As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Ambient As X3Core.X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Diffuse</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Diffuse As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Diffuse As X3Core.X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Shininess</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shininess As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Shininess As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Specular</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Specular As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Specular As X3Core.X3Color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Shininess</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1958432767">
 <ObjName>X3Sprite</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3Sprite</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim sprite As New X3Core.X3Sprite</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to SpriteMap.Ubound</SourceLine>
   <SourceLine>sprite.SpriteMap.Append SpriteMap(i).Clone()</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sprite.SpriteSheet = SpriteSheet  ' textures cannot be cloned because it is linked to a bitmap in OpenGL memory</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return sprite</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3Sprite</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initSheet As Picture)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SpriteSheet = new X3Core.X3Texture(initSheet)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initSheet As Picture</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initSheet As Picture, spriteWidth As Integer, spriteHeight As Integer, imageCount As Integer)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim colCount As Integer</SourceLine>
   <SourceLine>Dim row As Integer</SourceLine>
   <SourceLine>Dim col As Integer</SourceLine>
   <SourceLine>Dim sc As X3Core.X3SpriteCoordinate</SourceLine>
   <SourceLine>Dim u1 As Double</SourceLine>
   <SourceLine>Dim v1 As Double</SourceLine>
   <SourceLine>Dim u2 As Double</SourceLine>
   <SourceLine>Dim v2 As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SpriteSheet = new X3Core.X3Texture(initSheet)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>colCount = spriteSheet.Width \ spriteWidth</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' loop through all the images on the sprite sheet and set up their UV coordinates</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while i &lt; imageCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>row = i \ colCount</SourceLine>
   <SourceLine>col = i mod colCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>u1 = round((col * spriteWidth) / spriteSheet.Width * 100) / 100</SourceLine>
   <SourceLine>v1 = round((row * spriteHeight) / spriteSheet.Height * 100) / 100</SourceLine>
   <SourceLine>u2 = round(((col + 1) * spriteWidth) / spriteSheet.Width * 100) / 100</SourceLine>
   <SourceLine>v2 = round(((row + 1) * spriteHeight) / spriteSheet.Height * 100) / 100</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sc = new X3Core.X3SpriteCoordinate(u1, v1, u2, v2)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SpriteMap.Append sc</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initSheet As Picture, spriteWidth As Integer, spriteHeight As Integer, imageCount As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>SpriteMap()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SpriteMap() As X3Core.X3SpriteCoordinate</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SpriteMap() As X3Core.X3SpriteCoordinate</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SpriteSheet</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SpriteSheet As X3Core.X3Texture</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SpriteSheet As X3Core.X3Texture</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1536813055">
 <ObjName>X3SpriteCoordinate</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3SpriteCoordinate</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim coord As new X3SpriteCoordinate(U1, V1, U2, V2)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return coord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3SpriteCoordinate</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(initU1 As Double, initV1 As Double, initU2 As Double, initV2 As Double)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' configure coordinates with initial values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>U1 = initU1</SourceLine>
   <SourceLine>V1 = initV1</SourceLine>
   <SourceLine>U2 = initU2</SourceLine>
   <SourceLine>V2 = initV2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>initU1 As Double, initV1 As Double, initU2 As Double, initV2 As Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>U1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>U1 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>U1 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>U2</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>U2 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>U2 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>V1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>V1 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>V1 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>V2</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>V2 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>V2 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>U1</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>U2</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>V1</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>V2</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="92448767">
 <ObjName>X3IO</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>LoadModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LoadModel(modelFile As FolderItem) As X3Core.X3Model</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As X3Core.X3Model</SourceLine>
   <SourceLine>Dim tin As TextInputStream</SourceLine>
   <SourceLine>Dim modelJSON As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tin = TextInputStream.Open(modelFile) ' open file</SourceLine>
   <SourceLine>modelJSON = tin.ReadAll() ' load X3DF JSON from file</SourceLine>
   <SourceLine>tin.Close ' close file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Model = modelFromJSON(modelJSON) ' parse data and create X3Model from JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>modelFile As FolderItem</ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>SaveModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SaveModel(modelFile As FolderItem, model As X3Core.X3Model)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim json as String</SourceLine>
   <SourceLine>Dim tout As TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>json = X3_ModelToJSON(model) ' generate X3 Data Format JSON from X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tout = TextOutputStream.Create(modelFile) ' open file for output</SourceLine>
   <SourceLine>tout.WriteLine json ' write X3DF JASON to file</SourceLine>
   <SourceLine>tout.Close ' close file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>modelFile As FolderItem, model As X3Core.X3Model</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>modelFromJSON</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function modelFromJSON(modelJSON As String) As X3Core.X3Model</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As new X3Core.X3Model</SourceLine>
   <SourceLine>Dim pos As Integer</SourceLine>
   <SourceLine>Dim jsonMB As MemoryBlock</SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim mp As Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this method renders X3 Data Format JSON into an X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jsonMB = modelJSON</SourceLine>
   <SourceLine>pos = 0</SourceLine>
   <SourceLine>mp = jsonMB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result =matchX3Model(mp, pos, model) ' parse the JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>modelJSON As String</ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>matchX3Model</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchX3Model(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model = new X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if tmpStr = "x3model" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchModelObject(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchString(mp As Ptr, ByRef pos As Integer, ByRef value As String) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim sPos As Integer</SourceLine>
   <SourceLine>Dim ePos As Integer</SourceLine>
   <SourceLine>Dim valueMB As MemoryBlock</SourceLine>
   <SourceLine>Dim valuePtr As Ptr</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim idx As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine>value = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 34 then ' "</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPos = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;&gt; 34</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePos = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ePos &gt;= sPos then</SourceLine>
   <SourceLine>valueMB = new MemoryBlock(ePos - sPos + 1)</SourceLine>
   <SourceLine>valuePtr = valueMB</SourceLine>
   <SourceLine>idx = 0</SourceLine>
   <SourceLine>for i = sPos to ePos</SourceLine>
   <SourceLine>valuePtr.Byte(idx) = mp.Byte(i)</SourceLine>
   <SourceLine>idx = idx + 1</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = valueMB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef value As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchPolygon</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchPolygon(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim p As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim bLoadedNormal As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>p = new X3Core.X3Polygon()</SourceLine>
   <SourceLine>bLoadedNormal = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ci"</SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.CIndex = tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "mi"</SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.MIndex = tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ni"</SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.NIndex = tmpInt</SourceLine>
   <SourceLine>bLoadedNormal = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ti"</SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.TIndex = tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "uvi"</SourceLine>
   <SourceLine>result = matchUVIndex(mp, pos, p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "vi"</SourceLine>
   <SourceLine>result = matchVIndex(mp, pos, p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "vni"</SourceLine>
   <SourceLine>result = matchVNIndex(mp, pos, p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>model.AppendPolygon p</SourceLine>
   <SourceLine>if not bLoadedNormal then</SourceLine>
   <SourceLine>p.CalculateNormal()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchTexture</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchTexture(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim t As X3Core.X3Texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = new X3Core.X3Texture(Picture.FromData(DecodeBase64(tmpStr)))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Texture.Append t</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchDouble</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchDouble(mp As Ptr, ByRef pos As Integer, ByRef value As Double) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim sPosInt As Integer</SourceLine>
   <SourceLine>Dim ePosInt As Integer</SourceLine>
   <SourceLine>Dim sPosFrac As Integer</SourceLine>
   <SourceLine>Dim ePosFrac As Integer</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim exp As Integer</SourceLine>
   <SourceLine>Dim minus As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 45 then ' minus</SourceLine>
   <SourceLine>pos = pos + 1 ' skip sign</SourceLine>
   <SourceLine>minus = -1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>minus = 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPosInt = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57))</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePosInt = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 46 then ' .</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPosFrac = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57))</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePosFrac = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPosFrac = -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' integer part</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ePosInt &gt;= sPosInt then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exp = ePosInt - sPosInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = sPosInt to ePosInt</SourceLine>
   <SourceLine>value = value + (mp.Byte(i) - 48) * 10^exp</SourceLine>
   <SourceLine>exp = exp - 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' fraction part</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sPosFrac &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exp = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = sPosFrac to ePosFrac</SourceLine>
   <SourceLine>value = value + (mp.Byte(i) - 48) / 10^exp</SourceLine>
   <SourceLine>exp = exp + 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = value * minus</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef value As Double</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchInteger</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchInteger(mp As Ptr, ByRef pos As Integer, ByRef value As Integer) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim sPos As Integer</SourceLine>
   <SourceLine>Dim ePos As Integer</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim exp As Integer</SourceLine>
   <SourceLine>Dim minus As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 45 then ' minus</SourceLine>
   <SourceLine>pos = pos + 1 ' skip sign</SourceLine>
   <SourceLine>minus = -1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>minus = 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPos = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip first digit or sign symbol</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57)</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePos = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ePos &gt;= sPos then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exp = ePos - sPos</SourceLine>
   <SourceLine>for i = sPos to ePos</SourceLine>
   <SourceLine>value = value + (mp.Byte(i) - 48) * 10^exp</SourceLine>
   <SourceLine>exp = exp - 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = value * minus</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef value As Integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchUVIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchUVIndex(mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.UVIndex.Append tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchColorPal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchColorPal(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpR As Double</SourceLine>
   <SourceLine>Dim tmpG As Double</SourceLine>
   <SourceLine>Dim tmpB As Double</SourceLine>
   <SourceLine>Dim tmpA As Double</SourceLine>
   <SourceLine>Dim c As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>c = new X3Core.X3Color(tmpR, tmpG, tmpB, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.ColorPal.Append c</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchMaterial</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchMaterial(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpR As Double</SourceLine>
   <SourceLine>Dim tmpG As Double</SourceLine>
   <SourceLine>Dim tmpB As Double</SourceLine>
   <SourceLine>Dim tmpA As Double</SourceLine>
   <SourceLine>Dim m As X3Core.X3Material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m = new X3Core.X3Material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ===== AMBIENT =====================================</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m.Ambient.Red = tmpR</SourceLine>
   <SourceLine>m.Ambient.Green = tmpG</SourceLine>
   <SourceLine>m.Ambient.Blue = tmpB</SourceLine>
   <SourceLine>m.Ambient.Alpha = tmpA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ===== DIFFUSE =====================================</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m.Diffuse.Red = tmpR</SourceLine>
   <SourceLine>m.Diffuse.Green = tmpG</SourceLine>
   <SourceLine>m.Diffuse.Blue = tmpB</SourceLine>
   <SourceLine>m.Diffuse.Alpha = tmpA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ===== SPECULAR =====================================</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m.Specular.Red = tmpR</SourceLine>
   <SourceLine>m.Specular.Green = tmpG</SourceLine>
   <SourceLine>m.Specular.Blue = tmpB</SourceLine>
   <SourceLine>m.Specular.Alpha = tmpA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine>m.Shininess = tmpR</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Material.Append m</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchVIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchVIndex(mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VIndex.Append tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchNormal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchNormal(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine>Dim n As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = new X3Core.X3Vector(tmpX, tmpY, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Normal.Append n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchUVMap</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchUVMap(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpU As Double</SourceLine>
   <SourceLine>Dim tmpV As Double</SourceLine>
   <SourceLine>Dim uv As X3Core.X3UVCoordinate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpU)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpV)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>uv = new X3Core.X3UVCoordinate(tmpU, tmpV)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.UVMap.Append uv</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchVertex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchVertex(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine>Dim v As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v = new X3Core.X3Vector(tmpX, tmpY, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Vertex.Append v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchVNIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchVNIndex(mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VNIndex.Append tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>skipValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub skipValue(mp As Ptr, ByRef pos As Integer)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim count As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** decimal value? *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57)) or (mp.Byte(pos) = 46)  or (mp.Byte(pos) = 45) then ' string value?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57)) or (mp.Byte(pos) = 46)  or (mp.Byte(pos) = 45)</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** JSON object *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>count = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (mp.Byte(pos) = 123) then ' {</SourceLine>
   <SourceLine>count = count + 1</SourceLine>
   <SourceLine>elseif (mp.Byte(pos) = 125) then ' }</SourceLine>
   <SourceLine>count = count - 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) and (count &lt;= 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** string value *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif mp.Byte(pos) = 34 then ' "</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>loop until mp.Byte(pos) = 34</SourceLine>
   <SourceLine>pos = pos  + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** array *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>count = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (mp.Byte(pos) =  91) then ' [</SourceLine>
   <SourceLine>count = count + 1</SourceLine>
   <SourceLine>elseif (mp.Byte(pos) = 93) then ' ]</SourceLine>
   <SourceLine>count = count - 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) and (count &lt;= 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>break ' shouldn't break here... what are we missing?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>LoadModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LoadModel(modelJSON As String) As X3Core.X3Model</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Model = modelFromJSON(modelJSON) ' parse data and create X3Model from JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>modelJSON As String</ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>LoadScene</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LoadScene(sceneFile As FolderItem) As X3Core.X3Scene</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim scene As X3Core.X3Scene</SourceLine>
   <SourceLine>Dim tin As TextInputStream</SourceLine>
   <SourceLine>Dim sceneJSON As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tin = TextInputStream.Open(sceneFile) ' open file</SourceLine>
   <SourceLine>sceneJSON = tin.ReadAll() ' load X3DF JSON from file</SourceLine>
   <SourceLine>tin.Close ' close file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Scene = sceneFromJSON(sceneJSON) ' parse data and create X3Scene from JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sceneFile As FolderItem</ItemParams>
  <ItemResult>X3Core.X3Scene</ItemResult>
 </Method>
 <Method>
  <ItemName>LoadScene</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LoadScene(sceneJSON As String) As X3Core.X3Scene</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim scene As X3Core.X3Scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Scene = sceneFromJSON(sceneJSON) ' parse data and create X3Scene from JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sceneJSON As String</ItemParams>
  <ItemResult>X3Core.X3Scene</ItemResult>
 </Method>
 <Method>
  <ItemName>sceneFromJSON</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function sceneFromJSON(sceneJSON As String) As X3Core.X3Scene</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim scene As new X3Core.X3Scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim pos As Integer</SourceLine>
   <SourceLine>Dim jsonMB As MemoryBlock</SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim mp As Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this method renders X3 Data Format JSON into an X3Scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jsonMB = sceneJSON</SourceLine>
   <SourceLine>pos = 0</SourceLine>
   <SourceLine>mp = jsonMB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchX3Scene(mp, pos, scene) ' parse the JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sceneJSON As String</ItemParams>
  <ItemResult>X3Core.X3Scene</ItemResult>
 </Method>
 <Method>
  <ItemName>matchX3Scene</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchX3Scene(mp As Ptr, ByRef pos As Integer, ByRef scene As X3Core.X3Scene) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim tmpModel As X3Core.X3Model</SourceLine>
   <SourceLine>Dim models() As X3Core.X3Model</SourceLine>
   <SourceLine>Dim tmpCamera As X3Core.X3Camera</SourceLine>
   <SourceLine>Dim tmpLight As X3Core.X3Light</SourceLine>
   <SourceLine>Dim defaultCam As Integer = -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>scene = new X3Core.X3Scene</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if tmpStr = "x3scene" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "cameras"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (mp.Byte(pos) &lt;&gt; 93) and result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchCamera(mp, pos, tmpCamera)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>scene.Camera.Append tmpCamera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "defaultcam"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchInteger(mp, pos, defaultCam)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "lights"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (mp.Byte(pos) &lt;&gt; 93) and result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchLight(mp, pos, tmpLight)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>scene.Light.Append tmpLight</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "models"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (mp.Byte(pos) &lt;&gt; 93) and result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tmpModel = new X3Core.X3Model</SourceLine>
   <SourceLine>result = matchModelObject(mp, pos, tmpModel)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>models.Append tmpModel // add model to model templates that will be used to spawn objects</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos _</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "objects"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (mp.Byte(pos) &lt;&gt; 93) and result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchObject(mp, pos, scene, models)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result ' }</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// if no cameras were defined for the scene, then we add a default one at position (0, 0, 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if scene.Camera.Ubound &lt; 0 then</SourceLine>
   <SourceLine>tmpCamera = new X3Core.X3Camera</SourceLine>
   <SourceLine>scene.Camera.Append tmpCamera</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if defaultCam &gt;= 0 then</SourceLine>
   <SourceLine>scene.CameraIndex = defaultCam</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>scene.CameraIndex = 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef scene As X3Core.X3Scene</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchModelObject</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchModelObject(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model = new X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos _</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "colorpal"</SourceLine>
   <SourceLine>result = matchColorPal(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "material"</SourceLine>
   <SourceLine>result = matchMaterial(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "normal"</SourceLine>
   <SourceLine>result = matchNormal(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "polygon"</SourceLine>
   <SourceLine>result = matchPolygon(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "vertex"</SourceLine>
   <SourceLine>result = matchVertex(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "texture"</SourceLine>
   <SourceLine>result = matchTexture(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "uvmap"</SourceLine>
   <SourceLine>result = matchUVMap(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result ' }</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchObject</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchObject(mp As Ptr, ByRef pos As Integer, ByRef scene As X3Core.X3Scene, models() As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim modelInstance As X3Core.X3Model</SourceLine>
   <SourceLine>Dim index As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "mi"</SourceLine>
   <SourceLine>result = matchInteger(mp, pos, index)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>modelInstance = models(index).Clone</SourceLine>
   <SourceLine>scene.Model.Append modelInstance</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "pos"</SourceLine>
   <SourceLine>result = matchPosition(mp, pos, modelInstance)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "rot"</SourceLine>
   <SourceLine>result = matchRotation(mp, pos, modelInstance)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "scale"</SourceLine>
   <SourceLine>result = matchScale(mp, pos, modelInstance)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result ' }</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef scene As X3Core.X3Scene, models() As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchPosition</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchPosition(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Position.X = tmpX</SourceLine>
   <SourceLine>model.Position.Y = tmpY</SourceLine>
   <SourceLine>model.Position.Z = tmpZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchRotation(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpW As Double</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpW)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Rotation.W = tmpW</SourceLine>
   <SourceLine>model.Rotation.X = tmpX</SourceLine>
   <SourceLine>model.Rotation.Y = tmpY</SourceLine>
   <SourceLine>model.Rotation.Z = tmpZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchScale</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchScale(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Scale.X = tmpX</SourceLine>
   <SourceLine>model.Scale.Y = tmpY</SourceLine>
   <SourceLine>model.Scale.Z = tmpZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchCamera</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchCamera(mp As Ptr, ByRef pos As Integer, ByRef camera As X3Core.X3Camera) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim tmpQuat As X3Core.X3Quaternion</SourceLine>
   <SourceLine>Dim tmpVec As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim tmpDbl As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>camera = new X3Core.X3Camera</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "crot" // camera rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchQuaternion(mp, pos, tmpQuat)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>camera.CameraRotation = tmpQuat</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "dpos" // dolly position</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchVector(mp, pos, tmpVec)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>camera.DollyPosition = tmpVec</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "drot" // dolly rotation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchQuaternion(mp, pos, tmpQuat)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>camera.DollyRotation = tmpQuat</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "fov" // field of view</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpDbl)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>camera.FieldOfView = tmpDbl</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "zfar" // z-far</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpDbl)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>camera.zFar = tmpDbl</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "znear" // z-near</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpDbl)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>camera.zNear = tmpDbl</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result ' }</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef camera As X3Core.X3Camera</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchQuaternion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchQuaternion(mp As Ptr, ByRef pos As Integer, ByRef quat As X3Core.X3Quaternion) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpW As Double</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpW)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past closing bracket</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>quat = new X3Core.X3Quaternion</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>quat.W = tmpW</SourceLine>
   <SourceLine>quat.X = tmpX</SourceLine>
   <SourceLine>quat.Y = tmpY</SourceLine>
   <SourceLine>quat.Z = tmpZ</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef quat As X3Core.X3Quaternion</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchVector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchVector(mp As Ptr, ByRef pos As Integer, ByRef vec As X3Core.X3Vector) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine>pos = pos + 1 ' skip past closing bracket</SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>vec = new X3Core.X3Vector(tmpX, tmpY, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef vec As X3Core.X3Vector</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>skipWhitespace</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub skipWhitespace(mp As Ptr, ByRef pos As Integer)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>skipComma</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub skipComma(mp As Ptr, ByRef pos As Integer)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>matchLight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchLight(mp As Ptr, ByRef pos As Integer, ByRef light As X3Core.X3Light) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim tmpVec As X3Core.X3Vector</SourceLine>
   <SourceLine>Dim tmpCol As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>light = new X3Core.X3Light</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ambient" // ambient color of light</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchColor(mp, pos, tmpCol)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>light.Ambient = tmpCol</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "diffuse" // diffuse color of light</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchColor(mp, pos, tmpCol)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>light.Diffuse = tmpCol</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "pos" // light position</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchVector(mp, pos, tmpVec)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>light.Position = tmpVec</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "specular" // specular color of light</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchColor(mp, pos, tmpCol)</SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>light.Specular = tmpCol</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result ' }</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef light As X3Core.X3Light</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>matchColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function matchColor(mp As Ptr, ByRef pos As Integer, ByRef col As X3Core.X3Color) As Boolean</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpR As Double</SourceLine>
   <SourceLine>Dim tmpG As Double</SourceLine>
   <SourceLine>Dim tmpB As Double</SourceLine>
   <SourceLine>Dim tmpA As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipComma mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past closing bracket</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>skipWhitespace mp, pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>col = new X3Core.X3Color(tmpR, tmpG, tmpB, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef col As X3Core.X3Color</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="18925567">
 <ObjName>X3BoundingBox</ObjName>
 <ObjContainerID>1394687</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As X3Core.X3BoundingBox</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim bb As new X3Core.X3BoundingBox</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>bb.X1 = X1</SourceLine>
   <SourceLine>bb.Y1 = Y1</SourceLine>
   <SourceLine>bb.Z1 = Z1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>bb.X2 = X2</SourceLine>
   <SourceLine>bb.Y2 = Y2</SourceLine>
   <SourceLine>bb.Z2 = Z2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return bb</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>X3Core.X3BoundingBox</ItemResult>
 </Method>
 <Method>
  <ItemName>ApplyVertex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ApplyVertex(vec As X3Core.X3Vector)</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mFirstApply then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X1 = vec.X</SourceLine>
   <SourceLine>Y1 = vec.Y</SourceLine>
   <SourceLine>Z1 = vec.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X2 = vec.X</SourceLine>
   <SourceLine>Y2 = vec.Y</SourceLine>
   <SourceLine>Z2 = vec.Z</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mFirstApply = False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vec.X &lt; X1 then</SourceLine>
   <SourceLine>X1 = vec.X</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vec.Y &lt; Y1 then</SourceLine>
   <SourceLine>Y1 = vec.Y</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vec.Z &lt; Z1 then</SourceLine>
   <SourceLine>Z1 = vec.Z</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vec.X &gt; X2 then</SourceLine>
   <SourceLine>X2 = vec.X</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vec.Y &gt; Y2 then</SourceLine>
   <SourceLine>Y2 = vec.Y</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vec.Z &gt; Z2 then</SourceLine>
   <SourceLine>Z2 = vec.Z</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>vec As X3Core.X3Vector</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Clear()</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine>' X3 is a {Zoclee} initiative.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X1 = 0</SourceLine>
   <SourceLine>Y1 = 0</SourceLine>
   <SourceLine>Z1 = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>X2 = 0</SourceLine>
   <SourceLine>Y2 = 0</SourceLine>
   <SourceLine>Z2 = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mFirstApply = True</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>X1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>X1 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>X1 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Y1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Y1 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Y1 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Z1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Z1 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Z1 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>X2</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>X2 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>X2 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Y2</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Y2 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Y2 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Z2</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Z2 As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Z2 As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mFirstApply</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mFirstApply As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mFirstApply As Boolean = True</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>X1</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Y1</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Z1</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>X2</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Y2</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Z2</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="UIState" ID="0">
 <StudioWindowState>
  <Editors>
   <EditorCount>1</EditorCount>
   <Editor>
    <EditorIndex>0</EditorIndex>
    <EditorLocation>X3Core</EditorLocation>
    <EditorPath></EditorPath>
    <EditingPartID>1394687</EditingPartID>
   </Editor>
   <SelectedTab>0</SelectedTab>
  </Editors>
 </StudioWindowState>
 <WarningPreferences>
  <ItemName>5</ItemName>
  <ItemData>0</ItemData>
  <ItemName>6</ItemName>
  <ItemData>0</ItemData>
  <ItemName>7</ItemName>
  <ItemData>0</ItemData>
 </WarningPreferences>
</block>
</RBProject>
